error: undef
[{rebar3_proper_prv,init,
     [{state_t,"/home/ne/Projects/ChicagoBoss",
          {dict,22,16,16,8,80,48,
              {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
              {{[],
                [[{deps,default},
                  {<<"boss_db">>,
                   {git,"https://github.com/ErlyORM/boss_db.git",
                       {tag,"0.9.0"}}},
                  {<<"tinymq">>,
                   {git,"https://github.com/ChicagoBoss/tinymq.git",
                       {tag,"v0.9.0"}}},
                  {<<"erlydtl">>,
                   {git,"https://github.com/erlydtl/erlydtl.git",
                       {ref,"118c176"}}},
                  {<<"gen_smtp">>,
                   {git,"https://github.com/Vagabond/gen_smtp.git",
                       {tag,"0.11.0"}}},
                  {<<"iso8601">>,
                   {git,"https://github.com/danikp/erlang_iso8601.git",
                       {ref,"ae6a052017"}}},
                  {<<"mimetypes">>,
                   {git,"https://github.com/spawngrid/mimetypes.git",
                       {branch,master}}},
                  {<<"mochiweb">>,
                   {git,"https://github.com/mochi/mochiweb.git",
                       {ref,"53a9607"}}},
                  {<<"cowboy">>,
                   {git,"https://github.com/ninenines/cowboy.git",
                       {tag,"2.6.1"}}},
                  {<<"simple_bridge">>,
                   {git,"https://github.com/nitrogen/simple_bridge.git",
                       {ref,"1938ec7"}}},
                  {<<"boss_db">>,
                   {git,"https://github.com/ErlyORM/boss_db.git",
                       {ref,"20060a061d3c4120929e4a4fedae1bb5e5830426"}},
                   0},
                  {<<"cowboy">>,
                   {git,"https://github.com/ninenines/cowboy.git",
                       {ref,"e0254cdcb002d26a601d087b536d2b7e9be1f1f7"}},
                   0},
                  {<<"erlydtl">>,
                   {git,"https://github.com/erlydtl/erlydtl.git",
                       {ref,"118c176f61a0c466516c30502a1498ae3c40b545"}},
                   0},
                  {<<"gen_smtp">>,
                   {git,"https://github.com/Vagabond/gen_smtp.git",
                       {ref,"2ea8bb995adf32102f523cef93ae98e287ac77d1"}},
                   0},
                  {<<"iso8601">>,
                   {git,"https://github.com/danikp/erlang_iso8601.git",
                       {ref,"ae6a052017f44f995102f73993289e892af16c5d"}},
                   0},
                  {<<"mimetypes">>,
                   {git,"https://github.com/spawngrid/mimetypes.git",
                       {ref,"091a76398319e041fab444249ae5042500f3abaa"}},
                   0},
                  {<<"mochiweb">>,
                   {git,"https://github.com/mochi/mochiweb.git",
                       {ref,"53a9607510b7ae4c662305fa978c73edf06c4cb2"}},
                   0},
                  {<<"simple_bridge">>,
                   {git,"https://github.com/nitrogen/simple_bridge.git",
                       {ref,"1938ec77b499884cfbea197baf52e891adbd2418"}},
                   0},
                  {<<"tinymq">>,
                   {git,"https://github.com/ChicagoBoss/tinymq.git",
                       {ref,"24e8b52d679921c89144deda999039ca52c846f1"}},
                   0}],
                 [{plugins,default},rebar3_proper],
                 [{project_plugins,default}],
                 [{locks,default},
                  {<<"aleppo">>,
                   {git,"https://github.com/ErlyORM/aleppo.git",
                       {ref,"6049c5754918350af6202adf90ab71208732db12"}},
                   1},
                  {<<"boss_db">>,
                   {git,"https://github.com/ErlyORM/boss_db.git",
                       {ref,"20060a061d3c4120929e4a4fedae1bb5e5830426"}},
                   0},
                  {<<"cowboy">>,
                   {git,"https://github.com/ninenines/cowboy.git",
                       {ref,"e0254cdcb002d26a601d087b536d2b7e9be1f1f7"}},
                   0},
                  {<<"cowlib">>,
                   {git,"https://github.com/ninenines/cowlib",
                       {ref,"8588724cf91ddbb53b9c35ed665866556b217323"}},
                   1},
                  {<<"ddb">>,
                   {git,"https://github.com/ErlyORM/ddb.git",
                       {ref,"585efb98729a3a19ddfdfe9e96dad80d4cabc5c9"}},
                   1},
                  {<<"dh_date">>,
                   {git,"https://github.com/daleharvey/dh_date.git",
                       {ref,"23e5a61381d1f155520958ff28eba6a3480e9a10"}},
                   1},
                  {<<"epgsql">>,
                   {git,"https://github.com/epgsql/epgsql.git",
                       {ref,"3ee6e9c612a5388f0722d90051afaa3f4fd72c63"}},
                   1},
                  {<<"erlando">>,
                   {git,"https://github.com/ChicagoBoss/erlando.git",
                       {ref,"680688f246d84a2be6ce35764f3cb4f8356008f9"}},
                   1},
                  {<<"erlmc">>,
                   {git,"https://github.com/layerhq/erlmc.git",
                       {ref,"c5280dadc6b64912e100d812a4aa95de8dea4636"}},
                   1},
                  {<<"erlydtl">>,
                   {git,"https://github.com/erlydtl/erlydtl.git",
                       {ref,"118c176f61a0c466516c30502a1498ae3c40b545"}},
                   0},
                  {<<"ets_cache">>,
                   {git,"https://github.com/cuongth/ets_cache.git",
                       {ref,"c7a17204cd9602b677540e9c73d10e6f6f7da146"}},
                   1},
                  {<<"gen_smtp">>,
                   {git,"https://github.com/Vagabond/gen_smtp.git",
                       {ref,"2ea8bb995adf32102f523cef93ae98e287ac77d1"}},
                   0},
                  {<<"goldrush">>,
                   {pkg,<<"goldrush">>,<<"0.1.9">>,
                       <<"F06E5D5F1277DA5C413E84D5A2924174182FB108DABB39D5EC548B27424CD106">>},
                   2},
                  {<<"ibrowse">>,
                   {git,"https://github.com/cmullaparthi/ibrowse.git",
                       {ref,"ffe353054e964ac103d38a49a4950b5805927d93"}},
                   2},
                  {<<"iso8601">>,
                   {git,"https://github.com/danikp/erlang_iso8601.git",
                       {ref,"ae6a052017f44f995102f73993289e892af16c5d"}},
                   0},
                  {<<"jsx">>,
                   {git,"https://github.com/talentdeficit/jsx.git",
                       {ref,"fc2a001073f2300ba38427c23e83d5673c020542"}},
                   2},
                  {<<"lager">>,
                   {git,"https://github.com/erlang-lager/lager.git",
                       {ref,"69b4ada2341b8ab2cf5c8e464ac936e5e4a9f62b"}},
                   1},
                  {<<"medici">>,
                   {git,"https://github.com/ErlyORM/medici.git",
                       {ref,"bb6167459d19f48089b2bd46f753bf70fce495fe"}},
                   1},
                  {<<"mimetypes">>,
                   {git,"https://github.com/spawngrid/mimetypes.git",
                       {ref,"091a76398319e041fab444249ae5042500f3abaa"}},
                   0},
                  {<<"mochiweb">>,
                   {git,"https://github.com/mochi/mochiweb.git",
                       {ref,"53a9607510b7ae4c662305fa978c73edf06c4cb2"}},
                   0},
                  {<<"mysql">>,
                   {git,"https://github.com/ErlyORM/erlang-mysql-driver.git",
                       {ref,"5308a6536369739371baa21d42d29d8e417aacf2"}},
                   1},
                  {<<"pmod_transform">>,
                   {git,"git://github.com/erlang/pmod_transform.git",
                       {ref,"8d5ab70f087cfbb634d789f7489f09c6d39c5c8b"}},
                   2},
                  {<<"poolboy">>,
                   {git,"https://github.com/devinus/poolboy.git",
                       {ref,"29be47db8c2be38b18c908e43a80ebb7b9b6116b"}},
                   1},
                  {<<"ranch">>,
                   {git,"https://github.com/ninenines/ranch",
                       {ref,"3190aef88aea04d6dce8545fe9b4574288903f44"}},
                   1},
                  {<<"redo">>,
                   {git,"https://github.com/heroku/redo.git",
                       {ref,"cd75a11697d69e38b6e5e1750b7ec18414fb60eb"}},
                   1},
                  {<<"simple_bridge">>,
                   {git,"https://github.com/nitrogen/simple_bridge.git",
                       {ref,"1938ec77b499884cfbea197baf52e891adbd2418"}},
                   0},
                  {<<"stacktrace_compat">>,
                   {git,"git://github.com/g-andrade/stacktrace_compat",
                       {ref,"fe6238499a216f6f94836be9ec0b3956ea5c6101"}},
                   1},
                  {<<"tiny_pq">>,
                   {git,"https://github.com/ChicagoBoss/tiny_pq.git",
                       {ref,"5f13986299f0d81a26235cebcfb7ff87e207edfe"}},
                   1},
                  {<<"tinymq">>,
                   {git,"https://github.com/ChicagoBoss/tinymq.git",
                       {ref,"24e8b52d679921c89144deda999039ca52c846f1"}},
                   0},
                  {<<"uuid">>,
                   {git,"https://github.com/avtobiff/erlang-uuid.git",
                       {ref,"cb02a2039a9b29dd2eef0446039c9c6e164df9ef"}},
                   1}]],
                [[template_dir,46],
                 [dialyzer,
                  {warnings,
                      [error_handling,race_conditions,unmatched_returns,
                       underspecs]},
                  {get_warnings,false},
                  {plt_apps,top_level_deps},
                  {plt_extra_apps,[]},
                  {plt_location,local},
                  {plt_prefix,"boss"},
                  {base_plt_apps,[stdlib,kernel,erts]},
                  {base_plt_location,global},
                  {base_plt_prefix,"rebar3"}],
                 [caller|command_line],
                 [base_dir,47,104,111,109,101,47,110,101,47,80,114,111,106,
                  101,99,116,115,47,67,104,105,99,97,103,111,66,111,115,115,
                  47,95,98,117,105,108,100],
                 [deps_dir,112,108,117,103,105,110,115]],
                [[erl_opts,debug_info,warn_unused_vars,warn_unused_import,
                  warn_exported_vars,
                  {parse_transform,lager_transform},
                  {parse_transform,cut},
                  {parse_transform,do},
                  {parse_transform,import_as}],
                 [deps,
                  {boss_db,".*",
                      {git,"https://github.com/ErlyORM/boss_db.git",
                          {tag,"0.9.0"}}},
                  {tinymq,".*",
                      {git,"https://github.com/ChicagoBoss/tinymq.git",
                          {tag,"v0.9.0"}}},
                  {erlydtl,
                      {git,"https://github.com/erlydtl/erlydtl.git",
                          {ref,"118c176"}}},
                  {gen_smtp,
                      {git,"https://github.com/Vagabond/gen_smtp.git",
                          {tag,"0.11.0"}}},
                  {iso8601,
                      {git,"https://github.com/danikp/erlang_iso8601.git",
                          {ref,"ae6a052017"}}},
                  {mimetypes,
                      {git,"https://github.com/spawngrid/mimetypes.git",
                          {branch,master}}},
                  {mochiweb,
                      {git,"https://github.com/mochi/mochiweb.git",
                          {ref,"53a9607"}}},
                  {cowboy,
                      {git,"https://github.com/ninenines/cowboy.git",
                          {tag,"2.6.1"}}},
                  {simple_bridge,
                      {git,"https://github.com/nitrogen/simple_bridge.git",
                          {ref,"1938ec7"}}}],
                 [lib_dirs,"deps/elixir/lib","deps"],
                 [erlydtl_opts,
                  {doc_root,"src/boss"},
                  {out_dir,"ebin"},
                  {source_ext,".dtl"},
                  {module_ext,[]},
                  {compiler_options,[debug_info]},
                  report,return],
                 [plugins,rebar3_proper],
                 [profiles,
                  {test,
                      [{deps,[{proper,"1.1.1-beta"}]},
                       {erl_opts,[{d,'TEST'}]},
                       {extra_src_dirs,["test"]}]},
                  {boss_test,[{erl_opts,[{d,boss_test}]}]},
                  {prod,[]}],
                 [defines],
                 [overrides]],
                [[cover_enabled|true]],
                [[vsn_cache|
                  {dict,0,16,16,8,80,48,
                      {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                      {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}],
                 [force,48]],
                [],[],[],[],[],
                [[task,104,101,108,112]],
                [[shell,
                  {config,"priv/sample_configs/boss.simple.config"},
                  {apps,[boss]}]],
                [],[],[]}}},
          {dict,1,16,16,8,80,48,
              {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
              {{[],[],[],
                [[all_plugin_deps,
                  "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper/ebin"]],
                [],[],[],[],[],[],[],[],[],[],[],[]}}},
          {dict,14,16,16,8,80,48,
              {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
              {{[],
                [[{deps,default},
                  {<<"boss_db">>,
                   {git,"https://github.com/ErlyORM/boss_db.git",
                       {tag,"0.9.0"}}},
                  {<<"tinymq">>,
                   {git,"https://github.com/ChicagoBoss/tinymq.git",
                       {tag,"v0.9.0"}}},
                  {<<"erlydtl">>,
                   {git,"https://github.com/erlydtl/erlydtl.git",
                       {ref,"118c176"}}},
                  {<<"gen_smtp">>,
                   {git,"https://github.com/Vagabond/gen_smtp.git",
                       {tag,"0.11.0"}}},
                  {<<"iso8601">>,
                   {git,"https://github.com/danikp/erlang_iso8601.git",
                       {ref,"ae6a052017"}}},
                  {<<"mimetypes">>,
                   {git,"https://github.com/spawngrid/mimetypes.git",
                       {branch,master}}},
                  {<<"mochiweb">>,
                   {git,"https://github.com/mochi/mochiweb.git",
                       {ref,"53a9607"}}},
                  {<<"cowboy">>,
                   {git,"https://github.com/ninenines/cowboy.git",
                       {tag,"2.6.1"}}},
                  {<<"simple_bridge">>,
                   {git,"https://github.com/nitrogen/simple_bridge.git",
                       {ref,"1938ec7"}}},
                  {<<"boss_db">>,
                   {git,"https://github.com/ErlyORM/boss_db.git",
                       {ref,"20060a061d3c4120929e4a4fedae1bb5e5830426"}},
                   0},
                  {<<"cowboy">>,
                   {git,"https://github.com/ninenines/cowboy.git",
                       {ref,"e0254cdcb002d26a601d087b536d2b7e9be1f1f7"}},
                   0},
                  {<<"erlydtl">>,
                   {git,"https://github.com/erlydtl/erlydtl.git",
                       {ref,"118c176f61a0c466516c30502a1498ae3c40b545"}},
                   0},
                  {<<"gen_smtp">>,
                   {git,"https://github.com/Vagabond/gen_smtp.git",
                       {ref,"2ea8bb995adf32102f523cef93ae98e287ac77d1"}},
                   0},
                  {<<"iso8601">>,
                   {git,"https://github.com/danikp/erlang_iso8601.git",
                       {ref,"ae6a052017f44f995102f73993289e892af16c5d"}},
                   0},
                  {<<"mimetypes">>,
                   {git,"https://github.com/spawngrid/mimetypes.git",
                       {ref,"091a76398319e041fab444249ae5042500f3abaa"}},
                   0},
                  {<<"mochiweb">>,
                   {git,"https://github.com/mochi/mochiweb.git",
                       {ref,"53a9607510b7ae4c662305fa978c73edf06c4cb2"}},
                   0},
                  {<<"simple_bridge">>,
                   {git,"https://github.com/nitrogen/simple_bridge.git",
                       {ref,"1938ec77b499884cfbea197baf52e891adbd2418"}},
                   0},
                  {<<"tinymq">>,
                   {git,"https://github.com/ChicagoBoss/tinymq.git",
                       {ref,"24e8b52d679921c89144deda999039ca52c846f1"}},
                   0}],
                 [{plugins,default},rebar3_proper],
                 [{project_plugins,default}],
                 [{locks,default},
                  {<<"aleppo">>,
                   {git,"https://github.com/ErlyORM/aleppo.git",
                       {ref,"6049c5754918350af6202adf90ab71208732db12"}},
                   1},
                  {<<"boss_db">>,
                   {git,"https://github.com/ErlyORM/boss_db.git",
                       {ref,"20060a061d3c4120929e4a4fedae1bb5e5830426"}},
                   0},
                  {<<"cowboy">>,
                   {git,"https://github.com/ninenines/cowboy.git",
                       {ref,"e0254cdcb002d26a601d087b536d2b7e9be1f1f7"}},
                   0},
                  {<<"cowlib">>,
                   {git,"https://github.com/ninenines/cowlib",
                       {ref,"8588724cf91ddbb53b9c35ed665866556b217323"}},
                   1},
                  {<<"ddb">>,
                   {git,"https://github.com/ErlyORM/ddb.git",
                       {ref,"585efb98729a3a19ddfdfe9e96dad80d4cabc5c9"}},
                   1},
                  {<<"dh_date">>,
                   {git,"https://github.com/daleharvey/dh_date.git",
                       {ref,"23e5a61381d1f155520958ff28eba6a3480e9a10"}},
                   1},
                  {<<"epgsql">>,
                   {git,"https://github.com/epgsql/epgsql.git",
                       {ref,"3ee6e9c612a5388f0722d90051afaa3f4fd72c63"}},
                   1},
                  {<<"erlando">>,
                   {git,"https://github.com/ChicagoBoss/erlando.git",
                       {ref,"680688f246d84a2be6ce35764f3cb4f8356008f9"}},
                   1},
                  {<<"erlmc">>,
                   {git,"https://github.com/layerhq/erlmc.git",
                       {ref,"c5280dadc6b64912e100d812a4aa95de8dea4636"}},
                   1},
                  {<<"erlydtl">>,
                   {git,"https://github.com/erlydtl/erlydtl.git",
                       {ref,"118c176f61a0c466516c30502a1498ae3c40b545"}},
                   0},
                  {<<"ets_cache">>,
                   {git,"https://github.com/cuongth/ets_cache.git",
                       {ref,"c7a17204cd9602b677540e9c73d10e6f6f7da146"}},
                   1},
                  {<<"gen_smtp">>,
                   {git,"https://github.com/Vagabond/gen_smtp.git",
                       {ref,"2ea8bb995adf32102f523cef93ae98e287ac77d1"}},
                   0},
                  {<<"goldrush">>,
                   {pkg,<<"goldrush">>,<<"0.1.9">>,
                       <<"F06E5D5F1277DA5C413E84D5A2924174182FB108DABB39D5EC548B27424CD106">>},
                   2},
                  {<<"ibrowse">>,
                   {git,"https://github.com/cmullaparthi/ibrowse.git",
                       {ref,"ffe353054e964ac103d38a49a4950b5805927d93"}},
                   2},
                  {<<"iso8601">>,
                   {git,"https://github.com/danikp/erlang_iso8601.git",
                       {ref,"ae6a052017f44f995102f73993289e892af16c5d"}},
                   0},
                  {<<"jsx">>,
                   {git,"https://github.com/talentdeficit/jsx.git",
                       {ref,"fc2a001073f2300ba38427c23e83d5673c020542"}},
                   2},
                  {<<"lager">>,
                   {git,"https://github.com/erlang-lager/lager.git",
                       {ref,"69b4ada2341b8ab2cf5c8e464ac936e5e4a9f62b"}},
                   1},
                  {<<"medici">>,
                   {git,"https://github.com/ErlyORM/medici.git",
                       {ref,"bb6167459d19f48089b2bd46f753bf70fce495fe"}},
                   1},
                  {<<"mimetypes">>,
                   {git,"https://github.com/spawngrid/mimetypes.git",
                       {ref,"091a76398319e041fab444249ae5042500f3abaa"}},
                   0},
                  {<<"mochiweb">>,
                   {git,"https://github.com/mochi/mochiweb.git",
                       {ref,"53a9607510b7ae4c662305fa978c73edf06c4cb2"}},
                   0},
                  {<<"mysql">>,
                   {git,"https://github.com/ErlyORM/erlang-mysql-driver.git",
                       {ref,"5308a6536369739371baa21d42d29d8e417aacf2"}},
                   1},
                  {<<"pmod_transform">>,
                   {git,"git://github.com/erlang/pmod_transform.git",
                       {ref,"8d5ab70f087cfbb634d789f7489f09c6d39c5c8b"}},
                   2},
                  {<<"poolboy">>,
                   {git,"https://github.com/devinus/poolboy.git",
                       {ref,"29be47db8c2be38b18c908e43a80ebb7b9b6116b"}},
                   1},
                  {<<"ranch">>,
                   {git,"https://github.com/ninenines/ranch",
                       {ref,"3190aef88aea04d6dce8545fe9b4574288903f44"}},
                   1},
                  {<<"redo">>,
                   {git,"https://github.com/heroku/redo.git",
                       {ref,"cd75a11697d69e38b6e5e1750b7ec18414fb60eb"}},
                   1},
                  {<<"simple_bridge">>,
                   {git,"https://github.com/nitrogen/simple_bridge.git",
                       {ref,"1938ec77b499884cfbea197baf52e891adbd2418"}},
                   0},
                  {<<"stacktrace_compat">>,
                   {git,"git://github.com/g-andrade/stacktrace_compat",
                       {ref,"fe6238499a216f6f94836be9ec0b3956ea5c6101"}},
                   1},
                  {<<"tiny_pq">>,
                   {git,"https://github.com/ChicagoBoss/tiny_pq.git",
                       {ref,"5f13986299f0d81a26235cebcfb7ff87e207edfe"}},
                   1},
                  {<<"tinymq">>,
                   {git,"https://github.com/ChicagoBoss/tinymq.git",
                       {ref,"24e8b52d679921c89144deda999039ca52c846f1"}},
                   0},
                  {<<"uuid">>,
                   {git,"https://github.com/avtobiff/erlang-uuid.git",
                       {ref,"cb02a2039a9b29dd2eef0446039c9c6e164df9ef"}},
                   1}]],
                [[template_dir,46],
                 [dialyzer,
                  {warnings,
                      [error_handling,race_conditions,unmatched_returns,
                       underspecs]},
                  {get_warnings,false},
                  {plt_apps,top_level_deps},
                  {plt_extra_apps,[]},
                  {plt_location,local},
                  {plt_prefix,"boss"},
                  {base_plt_apps,[stdlib,kernel,erts]},
                  {base_plt_location,global},
                  {base_plt_prefix,"rebar3"}]],
                [[erl_opts,debug_info,warn_unused_vars,warn_unused_import,
                  warn_exported_vars,
                  {parse_transform,lager_transform},
                  {parse_transform,cut},
                  {parse_transform,do},
                  {parse_transform,import_as}],
                 [deps,
                  {boss_db,".*",
                      {git,"https://github.com/ErlyORM/boss_db.git",
                          {tag,"0.9.0"}}},
                  {tinymq,".*",
                      {git,"https://github.com/ChicagoBoss/tinymq.git",
                          {tag,"v0.9.0"}}},
                  {erlydtl,
                      {git,"https://github.com/erlydtl/erlydtl.git",
                          {ref,"118c176"}}},
                  {gen_smtp,
                      {git,"https://github.com/Vagabond/gen_smtp.git",
                          {tag,"0.11.0"}}},
                  {iso8601,
                      {git,"https://github.com/danikp/erlang_iso8601.git",
                          {ref,"ae6a052017"}}},
                  {mimetypes,
                      {git,"https://github.com/spawngrid/mimetypes.git",
                          {branch,master}}},
                  {mochiweb,
                      {git,"https://github.com/mochi/mochiweb.git",
                          {ref,"53a9607"}}},
                  {cowboy,
                      {git,"https://github.com/ninenines/cowboy.git",
                          {tag,"2.6.1"}}},
                  {simple_bridge,
                      {git,"https://github.com/nitrogen/simple_bridge.git",
                          {ref,"1938ec7"}}}],
                 [lib_dirs,"deps/elixir/lib","deps"],
                 [erlydtl_opts,
                  {doc_root,"src/boss"},
                  {out_dir,"ebin"},
                  {source_ext,".dtl"},
                  {module_ext,[]},
                  {compiler_options,[debug_info]},
                  report,return],
                 [plugins,rebar3_proper],
                 [profiles,
                  {test,[{deps,[{proper,"1.1.1-beta"}]}]},
                  {boss_test,[{erl_opts,[{d,boss_test}]}]},
                  {prod,[]}]],
                [[cover_enabled|true]],
                [],[],[],[],[],[],[],
                [[shell,
                  {config,"priv/sample_configs/boss.simple.config"},
                  {apps,[boss]}]],
                [],[],[]}}},
          "/usr/local/bin/rebar3",
          [{app_info_t,<<"rebar3_proper">>,
               "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper/src/rebar3_proper.app.src",
               undefined,
               "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper/ebin/rebar3_proper.app",
               "0.11.1",root,
               [{description,"Run PropEr test suites"},
                {vsn,"0.11.1"},
                {registered,[]},
                {applications,[kernel,stdlib,proper]},
                {env,[]},
                {modules,[rebar3_proper,rebar3_proper_prv]},
                {maintainers,["Fred Hebert"]},
                {licenses,["BSD"]},
                {links,
                    [{"Github","https://github.com/ferd/rebar3_proper"},
                     {"PropEr","http://proper.softlab.ntua.gr/"}]}],
               [kernel,stdlib,proper],
               [],
               [default],
               {dict,4,16,16,8,80,48,
                   {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                   {{[],
                     [[{deps,default}],[{plugins,default}],[{locks,default}]],
                     [],
                     [[overrides]],
                     [],[],[],[],[],[],[],[],[],[],[],[]}}},
               {dict,4,16,16,8,80,48,
                   {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                   {{[],
                     [[{deps,default}],[{plugins,default}],[{locks,default}]],
                     [],
                     [[overrides]],
                     [],[],[],[],[],[],[],[],[],[],[],[]}}},
               0,
               "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper",
               "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper",
               undefined,
               {pkg,<<"rebar3_proper">>,<<"0.11.1">>,
                   <<"AEE40A815A90F72C5B463C7D3329044A7846051F1E965DE58F8F1F6130056E73">>,
                   #{api_url => <<"https://hex.pm/api">>,
                     http_adapter => hex_http_httpc,
                     http_adapter_config => #{profile => rebar},
                     http_user_agent_fragment => <<"(rebar3/3.9.0) (httpc)">>,
                     name => <<"hexpm">>,repo_name => <<"hexpm">>,
                     repo_public_key =>
                         <<"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApqREcFDt5vV21JVe2QNB\nEdvzk6w36aNFhVGWN5toNJRjRJ6m4hIuG4KaXtDWVLjnvct6MYMfqhC79HAGwyF+\nIqR6Q6a5bbFSsImgBJwz1oadoVKD6ZNetAuCIK84cjMrEFRkELtEIPNHblCzUkkM\n3rS9+DPlnfG8hBvGi6tvQIuZmXGCxF/73hU0/MyGhbmEjIKRtG6b0sJYKelRLTPW\nXgK7s5pESgiwf2YC/2MGDXjAJfpfCd0RpLdvd4eRiXtVlE9qO9bND94E7PgQ/xqZ\nJ1i2xWFndWa6nfFnRxZmCStCOZWYYPlaxr+FZceFbpMwzTNs4g3d4tLNUcbKAIH4\n0wIDAQAB\n-----END PUBLIC KEY-----">>,
                     repo_url => <<"https://repo.hex.pm">>,
                     repo_verify => true,repo_verify_origin => true}},
               false,false,true,undefined,true}],
          [default],
          default,[],
          {[],[]},
          undefined,[],[],
          [{app_info_t,<<"rebar3_proper">>,
               "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper/src/rebar3_proper.app.src",
               undefined,
               "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper/ebin/rebar3_proper.app",
               "0.11.1",root,
               [{description,"Run PropEr test suites"},
                {vsn,"0.11.1"},
                {registered,[]},
                {applications,[kernel,stdlib,proper]},
                {env,[]},
                {modules,[rebar3_proper,rebar3_proper_prv]},
                {maintainers,["Fred Hebert"]},
                {licenses,["BSD"]},
                {links,
                    [{"Github","https://github.com/ferd/rebar3_proper"},
                     {"PropEr","http://proper.softlab.ntua.gr/"}]}],
               [kernel,stdlib,proper],
               [],
               [default,prod],
               {dict,4,16,16,8,80,48,
                   {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                   {{[],
                     [[{deps,default}],[{plugins,default}],[{locks,default}]],
                     [],
                     [[overrides]],
                     [],[],[],[],[],[],[],[],[],[],[],[]}}},
               {dict,4,16,16,8,80,48,
                   {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                   {{[],
                     [[{deps,default}],[{plugins,default}],[{locks,default}]],
                     [],
                     [[overrides]],
                     [],[],[],[],[],[],[],[],[],[],[],[]}}},
               0,
               "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper",
               "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper",
               undefined,
               {pkg,<<"rebar3_proper">>,<<"0.11.1">>,
                   <<"AEE40A815A90F72C5B463C7D3329044A7846051F1E965DE58F8F1F6130056E73">>,
                   #{api_url => <<"https://hex.pm/api">>,
                     http_adapter => hex_http_httpc,
                     http_adapter_config => #{profile => rebar},
                     http_user_agent_fragment => <<"(rebar3/3.9.0) (httpc)">>,
                     name => <<"hexpm">>,repo_name => <<"hexpm">>,
                     repo_public_key =>
                         <<"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApqREcFDt5vV21JVe2QNB\nEdvzk6w36aNFhVGWN5toNJRjRJ6m4hIuG4KaXtDWVLjnvct6MYMfqhC79HAGwyF+\nIqR6Q6a5bbFSsImgBJwz1oadoVKD6ZNetAuCIK84cjMrEFRkELtEIPNHblCzUkkM\n3rS9+DPlnfG8hBvGi6tvQIuZmXGCxF/73hU0/MyGhbmEjIKRtG6b0sJYKelRLTPW\nXgK7s5pESgiwf2YC/2MGDXjAJfpfCd0RpLdvd4eRiXtVlE9qO9bND94E7PgQ/xqZ\nJ1i2xWFndWa6nfFnRxZmCStCOZWYYPlaxr+FZceFbpMwzTNs4g3d4tLNUcbKAIH4\n0wIDAQAB\n-----END PUBLIC KEY-----">>,
                     repo_url => <<"https://repo.hex.pm">>,
                     repo_verify => true,repo_verify_origin => true}},
               false,false,true,undefined,true}],
          [],
          [rebar_compiler_xrl,rebar_compiler_yrl,rebar_compiler_mib,
           rebar_compiler_erl],
          [],
          [{resource,hg,rebar_hg_resource,#{},rebar_resource_v2},
           {resource,pkg,rebar_pkg_resource,
               #{base_config =>
                     #{http_adapter => hex_http_httpc,
                       http_adapter_config => #{profile => rebar},
                       http_user_agent_fragment =>
                           <<"(rebar3/3.9.0) (httpc)">>},
                 repos =>
                     [#{api_url => <<"https://hex.pm/api">>,
                        http_adapter => hex_http_httpc,
                        http_adapter_config => #{profile => rebar},
                        http_user_agent_fragment =>
                            <<"(rebar3/3.9.0) (httpc)">>,
                        name => <<"hexpm">>,repo_name => <<"hexpm">>,
                        repo_public_key =>
                            <<"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApqREcFDt5vV21JVe2QNB\nEdvzk6w36aNFhVGWN5toNJRjRJ6m4hIuG4KaXtDWVLjnvct6MYMfqhC79HAGwyF+\nIqR6Q6a5bbFSsImgBJwz1oadoVKD6ZNetAuCIK84cjMrEFRkELtEIPNHblCzUkkM\n3rS9+DPlnfG8hBvGi6tvQIuZmXGCxF/73hU0/MyGhbmEjIKRtG6b0sJYKelRLTPW\nXgK7s5pESgiwf2YC/2MGDXjAJfpfCd0RpLdvd4eRiXtVlE9qO9bND94E7PgQ/xqZ\nJ1i2xWFndWa6nfFnRxZmCStCOZWYYPlaxr+FZceFbpMwzTNs4g3d4tLNUcbKAIH4\n0wIDAQAB\n-----END PUBLIC KEY-----">>,
                        repo_url => <<"https://repo.hex.pm">>,
                        repo_verify => true,repo_verify_origin => true}]},
               rebar_resource_v2},
           {resource,git,rebar_git_resource,#{},rebar_resource_v2}],
          [{provider,xref,rebar_prv_xref,
               {[],[]},
               true,
               [compile],
               ["Run cross reference analysis.","\n","\n",86,97,108,105,100,
                32,114,101,98,97,114,46,99,111,110,102,105,103,32,111,112,116,
                105,111,110,115,58,"\n",32,32,
                [123,["xref_warnings",44,"false"],125],
                "\n",32,32,
                [123,["xref_extra_paths",44,"[]"],125],
                "\n",32,32,
                [123,
                 ["xref_checks",44,
                  [91,
                   ["undefined_function_calls",44,"undefined_functions",44,
                    "locals_not_used",44,10,
                    [32,[32,["   ",32,32,32],"   ",32,32,32],32,32],
                    "exports_not_used",44,"deprecated_function_calls",44,10,
                    [32,[32,["   ",32,32,32],"   ",32,32,32],32,32],
                    "deprecated_functions"],
                   93]],
                 125],
                "\n",32,32,
                [123,
                 ["xref_queries",44,
                  [91,
                   [[123,
                     ["\"(xc - uc) || (xu - x - b - (\\\"mod\\\":\\\".*foo\\\"/\\\"4\\\"))\"",
                      44,10,
                      [32,32,[[32,"   ",32,32,32],32,"   ",32,32,32],32,32],
                      "[]"],
                     125]],
                   93]],
                 125],
                "\n"],
               "Run cross reference analysis.","rebar3 xref",[],
               [default],
               default},
           {provider,version,rebar_prv_version,
               {[],[]},
               true,[],"Print version for rebar and current Erlang.",
               "Print version for rebar and current Erlang.","rebar3 version",
               [],
               [default],
               default},
           {provider,upgrade,rebar_prv_upgrade,
               {[],[]},
               true,
               [lock],
               "Upgrade project dependencies. Mentioning no application will upgrade all dependencies. To upgrade specific dependencies, their names can be listed in the command.",
               "Upgrade dependencies.","rebar3 upgrade [cowboy[,ranch]]",
               [{package,undefined,undefined,string,
                    "List of packages to upgrade. If not specified, all dependencies are upgraded."}],
               [default],
               default},
           {provider,update,rebar_prv_update,
               {[],[]},
               true,[],"Update package index.","Update package index.",
               "rebar3 update",[],
               [default],
               default},
           {provider,unlock,rebar_prv_unlock,
               {[],[]},
               true,[],
               "Unlock project dependencies. Mentioning no application will unlock all dependencies. To unlock specific dependencies, their name can be listed in the command.",
               "Unlock dependencies.",[],
               [{package,undefined,undefined,string,
                    "List of packages to unlock. If not specified, all dependencies are unlocked."}],
               [default],
               default},
           {provider,tar,rebar_prv_tar,
               {[],[]},
               true,
               [release],
               "Tar archive of release built of project.",
               "Tar archive of release built of project.","rebar3 tar",
               [{relname,110,"relname",string,
                    "Specify the name for the release that will be generated"},
                {relvsn,118,"relvsn",string,
                    "Specify the version for the release"},
                {goal,103,"goal",string,
                    "Specify a target constraint on the system. These are usually the OTP"},
                {upfrom,117,"upfrom",string,
                    "Only valid with relup target, specify the release to upgrade from"},
                {output_dir,111,"output-dir",string,
                    "The output directory for the release. This is `./` by default."},
                {help,104,"help",undefined,"Print usage"},
                {lib_dir,108,"lib-dir",string,
                    "Additional dir that should be searched for OTP Apps"},
                {path,112,"path",string,
                    "Additional dir to add to the code path"},
                {default_libs,undefined,"default-libs",boolean,
                    "Whether to use the default system added lib dirs (means you must add them all manually). Default is true"},
                {log_level,86,"verbose",
                    {integer,2},
                    "Verbosity level, maybe between 0 and 3"},
                {dev_mode,100,"dev-mode",boolean,
                    "Symlink the applications and configuration into the release instead of copying"},
                {include_erts,105,"include-erts",string,
                    "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
                {override,97,"override",string,
                    "Provide an app name and a directory to override in the form <appname>:<app directory>"},
                {config,99,"config",{string,[]},"The path to a config file"},
                {overlay_vars,undefined,"overlay_vars",string,
                    "Path to a file of overlay variables"},
                {vm_args,undefined,"vm_args",string,
                    "Path to a file to use for vm.args"},
                {sys_config,undefined,"sys_config",string,
                    "Path to a file to use for sys.config"},
                {system_libs,undefined,"system_libs",string,
                    "Path to dir of Erlang system libs"},
                {version,undefined,"version",undefined,"Print relx version"},
                {root_dir,114,"root",string,"The project root directory"}],
               [default],
               default},
           {provider,state,rebar_prv_state,
               {[],[]},
               false,[],"Display rebar configuration for debugging purpose",
               "Print current configuration state","rebar3 state",[],
               [default],
               default},
           {provider,shell,rebar_prv_shell,
               {[],[]},
               true,
               [compile],
               "Start a shell with project and deps preloaded similar to~n'erl -pa ebin -pa deps/*/ebin'.~n",
               "Run shell with project apps and deps in path.","rebar3 shell",
               [{config,undefined,"config",string,
                    "Path to the config file to use. Defaults to {shell, [{config, File}]} and then the relx sys.config file if not specified."},
                {name,undefined,"name",atom,"Gives a long name to the node."},
                {sname,undefined,"sname",atom,
                    "Gives a short name to the node."},
                {setcookie,undefined,"setcookie",atom,
                    "Sets the cookie if the node is distributed."},
                {script_file,undefined,"script",string,
                    "Path to an escript file to run before starting the project apps. Defaults to rebar.config {shell, [{script_file, File}]} if not specified."},
                {apps,undefined,"apps",string,
                    "A list of apps to boot before starting the shell. (E.g. --apps app1,app2,app3) Defaults to rebar.config {shell, [{apps, Apps}]} or relx apps if not specified."},
                {relname,114,"relname",atom,
                    "Name of the release to use as a template for the shell session"},
                {relvsn,118,"relvsn",string,
                    "Version of the release to use for the shell session"},
                {start_clean,undefined,"start-clean",boolean,
                    "Cancel any applications in the 'apps' list or release."},
                {user_drv_args,undefined,"user_drv_args",string,
                    "Arguments passed to user_drv start function for creating custom shells."}],
               [default],
               default},
           {provider,repos,rebar_prv_repos,
               {[],[]},
               false,[],
               "Display repository configuration for debugging purpose",
               "Print current package repository configuration",
               "rebar3 repos",[],
               [default],
               default},
           {provider,report,rebar_prv_report,
               {[],[]},
               true,[],
               "Provide a crash report to be sent to the rebar3 issues page.",
               "Provide a crash report to be sent to the rebar3 issues page.",
               "rebar3 report \"<task>\"",
               [{task,undefined,undefined,string,
                    "Task to print details for."}],
               [default],
               default},
           {provider,relup,rebar_prv_relup,
               {[],[]},
               true,
               [release],
               "Create relup of releases.","Create relup of releases.",
               "rebar3 relup",
               [{relname,110,"relname",string,
                    "Specify the name for the release that will be generated"},
                {relvsn,118,"relvsn",string,
                    "Specify the version for the release"},
                {goal,103,"goal",string,
                    "Specify a target constraint on the system. These are usually the OTP"},
                {upfrom,117,"upfrom",string,
                    "Only valid with relup target, specify the release to upgrade from"},
                {output_dir,111,"output-dir",string,
                    "The output directory for the release. This is `./` by default."},
                {help,104,"help",undefined,"Print usage"},
                {lib_dir,108,"lib-dir",string,
                    "Additional dir that should be searched for OTP Apps"},
                {path,112,"path",string,
                    "Additional dir to add to the code path"},
                {default_libs,undefined,"default-libs",boolean,
                    "Whether to use the default system added lib dirs (means you must add them all manually). Default is true"},
                {log_level,86,"verbose",
                    {integer,2},
                    "Verbosity level, maybe between 0 and 3"},
                {dev_mode,100,"dev-mode",boolean,
                    "Symlink the applications and configuration into the release instead of copying"},
                {include_erts,105,"include-erts",string,
                    "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
                {override,97,"override",string,
                    "Provide an app name and a directory to override in the form <appname>:<app directory>"},
                {config,99,"config",{string,[]},"The path to a config file"},
                {overlay_vars,undefined,"overlay_vars",string,
                    "Path to a file of overlay variables"},
                {vm_args,undefined,"vm_args",string,
                    "Path to a file to use for vm.args"},
                {sys_config,undefined,"sys_config",string,
                    "Path to a file to use for sys.config"},
                {system_libs,undefined,"system_libs",string,
                    "Path to dir of Erlang system libs"},
                {version,undefined,"version",undefined,"Print relx version"},
                {root_dir,114,"root",string,"The project root directory"}],
               [default],
               default},
           {provider,release,rebar_prv_release,
               {[],[]},
               true,
               [compile],
               "Build release of project.","Build release of project.",
               "rebar3 release",
               [{relname,110,"relname",string,
                    "Specify the name for the release that will be generated"},
                {relvsn,118,"relvsn",string,
                    "Specify the version for the release"},
                {goal,103,"goal",string,
                    "Specify a target constraint on the system. These are usually the OTP"},
                {upfrom,117,"upfrom",string,
                    "Only valid with relup target, specify the release to upgrade from"},
                {output_dir,111,"output-dir",string,
                    "The output directory for the release. This is `./` by default."},
                {help,104,"help",undefined,"Print usage"},
                {lib_dir,108,"lib-dir",string,
                    "Additional dir that should be searched for OTP Apps"},
                {path,112,"path",string,
                    "Additional dir to add to the code path"},
                {default_libs,undefined,"default-libs",boolean,
                    "Whether to use the default system added lib dirs (means you must add them all manually). Default is true"},
                {log_level,86,"verbose",
                    {integer,2},
                    "Verbosity level, maybe between 0 and 3"},
                {dev_mode,100,"dev-mode",boolean,
                    "Symlink the applications and configuration into the release instead of copying"},
                {include_erts,105,"include-erts",string,
                    "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
                {override,97,"override",string,
                    "Provide an app name and a directory to override in the form <appname>:<app directory>"},
                {config,99,"config",{string,[]},"The path to a config file"},
                {overlay_vars,undefined,"overlay_vars",string,
                    "Path to a file of overlay variables"},
                {vm_args,undefined,"vm_args",string,
                    "Path to a file to use for vm.args"},
                {sys_config,undefined,"sys_config",string,
                    "Path to a file to use for sys.config"},
                {system_libs,undefined,"system_libs",string,
                    "Path to dir of Erlang system libs"},
                {version,undefined,"version",undefined,"Print relx version"},
                {root_dir,114,"root",string,"The project root directory"}],
               [default],
               default},
           {provider,upgrade,rebar_prv_plugins_upgrade,
               {[],[]},
               true,[],"List or upgrade plugins","Upgrade plugins",
               "rebar3 plugins upgrade <plugin>",
               [{plugin,undefined,undefined,string,"Plugin to upgrade"}],
               [default],
               plugins},
           {provider,list,rebar_prv_plugins,
               {[],[]},
               true,[],"List local and global plugins for this project",
               "List local and global plugins for this project",
               "rebar3 plugins list",[],
               [default],
               plugins},
           {provider,path,rebar_prv_path,
               {[],[]},
               true,
               [app_discovery],
               "Print paths to build dirs in current profile.",
               "Print paths to build dirs in current profile.","rebar3 path",
               [{app,undefined,"app",string,
                    "Comma separated list of applications to return paths for."},
                {base,undefined,"base",boolean,
                    "Return the `base' path of the current profile."},
                {bin,undefined,"bin",boolean,
                    "Return the `bin' path of the current profile."},
                {ebin,undefined,"ebin",boolean,
                    "Return all `ebin' paths of the current profile's applications."},
                {lib,undefined,"lib",boolean,
                    "Return the `lib' path of the current profile."},
                {priv,undefined,"priv",boolean,
                    "Return the `priv' path of the current profile's applications."},
                {separator,115,"separator",string,
                    "In case of multiple return paths, the separator character to use to join them."},
                {src,undefined,"src",boolean,
                    "Return the `src' path of the current profile's applications."},
                {rel,undefined,"rel",boolean,
                    "Return the `rel' path of the current profile."}],
               [default],
               default},
           {provider,pkgs,rebar_prv_packages,
               {[],[]},
               true,[],
               ["List information for a package",46,"\n"],
               "List information for a package.","rebar3 pkgs elli",
               [{package,undefined,undefined,string,
                    "Package to fetch information for."}],
               [default],
               default},
           {provider,new,rebar_prv_new,
               {[],[]},
               true,[],
               [67,114,101,97,116,101,32,114,101,98,97,114,51,32,112,114,111,
                106,101,99,116,32,98,97,115,101,100,32,111,110,32,116,101,109,
                112,108,97,116,101,32,97,110,100,32,118,97,114,115,46,"\n",
                "\n",86,97,108,105,100,32,99,111,109,109,97,110,100,32,108,
                105,110,101,32,111,112,116,105,111,110,115,58,"\n",32,32,60,
                116,101,109,112,108,97,116,101,62,32,91,118,97,114,61,102,111,
                111,44,46,46,46,93,"\n","\n",83,101,101,32,97,118,97,105,108,
                97,98,108,101,32,116,101,109,112,108,97,116,101,115,32,119,
                105,116,104,58,32,96,114,101,98,97,114,51,32,110,101,119,32,
                104,101,108,112,96,"\n"],
               "Create new project from templates.","rebar3 new <template>",
               [{force,102,"force",undefined,"overwrite existing files"}],
               [default],
               default},
           {provider,lock,rebar_prv_lock,
               {[],[]},
               false,
               [install_deps],
               "Locks dependencies","Locks dependencies.",[],[],
               [default],
               default},
           {provider,upgrade,rebar_prv_local_upgrade,
               {[],[]},
               true,[],[],"Download latest rebar3 escript and extract.",
               "rebar3 unstable upgrade",[],
               [default],
               local},
           {provider,install,rebar_prv_local_install,
               {[],[]},
               true,[],[],
               "Extract libs from rebar3 escript along with a run script.",
               "rebar3 unstable install",[],
               [default],
               local},
           {provider,install_deps,rebar_prv_install_deps,
               {[],[]},
               false,
               [app_discovery],
               [],[],undefined,[],
               [default],
               default},
           {provider,help,rebar_prv_help,
               {[],[]},
               true,[],
               "Display a list of tasks or help for a given task or subtask.",
               "Display a list of tasks or help for a given task or subtask.",
               "rebar3 help <task>",
               [{help_task,undefined,undefined,string,
                    "Task to print help for."}],
               [default],
               default},
           {provider,'get-deps',rebar_prv_get_deps,
               {[],[]},
               true,
               [lock],
               "Fetch project dependencies.","Fetch dependencies.",
               "rebar3 get-deps",[],[],default},
           {provider,eunit,rebar_prv_eunit,
               {[],[]},
               true,
               [lock],
               "Run EUnit Tests.","Run EUnit Tests.","rebar3 eunit",
               [{app,undefined,"app",string,
                    "Comma separated list of application test suites to run. Equivalent to `[{application, App}]`."},
                {application,undefined,"application",string,
                    "Comma separated list of application test suites to run. Equivalent to `[{application, App}]`."},
                {cover,99,"cover",boolean,
                    "Generate cover data. Defaults to false."},
                {cover_export_name,undefined,"cover_export_name",string,
                    "Base name of the coverdata file to write"},
                {dir,100,"dir",string,
                    "Comma separated list of dirs to load tests from. Equivalent to `[{dir, Dir}]`."},
                {file,102,"file",string,
                    "Comma separated list of files to load tests from. Equivalent to `[{file, File}]`."},
                {module,109,"module",string,
                    "Comma separated list of modules to load tests from. Equivalent to `[{module, Module}]`."},
                {suite,115,"suite",string,
                    "Comma separated list of modules to load tests from. Equivalent to `[{module, Module}]`."},
                {generator,103,"generator",string,
                    "Comma separated list of generators (the format is `module:function`) to load tests from. Equivalent to `[{generator, Module, Function}]`."},
                {verbose,118,"verbose",boolean,
                    "Verbose output. Defaults to false."},
                {name,undefined,"name",atom,"Gives a long name to the node"},
                {sname,undefined,"sname",atom,
                    "Gives a short name to the node"},
                {setcookie,undefined,"setcookie",atom,
                    "Sets the cookie if the node is distributed"}],
               [test],
               default},
           {provider,escriptize,rebar_prv_escriptize,
               {[],[]},
               true,
               [compile],
               "Generate an escript executable containing the project's and its dependencies' BEAM files.",
               "Generate escript archive.","rebar3 escriptize",[],
               [default],
               default},
           {provider,edoc,rebar_prv_edoc,
               {[],[]},
               true,
               [compile],
               "Generate documentation using edoc.",
               "Generate documentation using edoc.","rebar3 edoc",[],
               [docs],
               default},
           {provider,do,rebar_prv_do,
               {[],[]},
               true,[],
               "Higher order provider for running multiple tasks in a sequence.",
               "Higher order provider for running multiple tasks in a sequence.",
               "rebar3 do <task1>, <task2>, ...",[],
               [default],
               default},
           {provider,dialyzer,rebar_prv_dialyzer,
               {[],[]},
               true,
               [compile],
               "Run the Dialyzer analyzer on the project.\n\nThis command will build, and keep up-to-date, a suitable PLT and will use it to carry out success typing analysis on the current project.\n\nThe following (optional) configurations can be added to a `proplist` of options `dialyzer` in rebar.config:\n`warnings` - a list of dialyzer warnings\n`get_warnings` - display warnings when altering a PLT file (boolean)\n`plt_apps` - the strategy for determining the applications which included in the PLT file, `top_level_deps` to include just the direct dependencies or `all_deps` to include all nested dependencies*\n`plt_extra_apps` - a list of extra applications to include in the PLT file\n`plt_extra_mods` - a list of extra modules to includes in the PLT file\n`plt_location` - the location of the PLT file, `local` to store in the profile's base directory (default) or a custom directory.\n`plt_prefix` - the prefix to the PLT file, defaults to \"rebar3\"**\n`base_plt_apps` - a list of applications to include in the base PLT file***\n`base_plt_mods` - a list of modules to include in the base PLT file***\n`base_plt_location` - the location of base PLT file, `global` to store in $HOME/.cache/rebar3 (default) or  a custom directory***\n`base_plt_prefix` - the prefix to the base PLT file, defaults to \"rebar3\"** ***\n`exclude_apps` - a list of applications to exclude from PLT files and success typing analysis, `plt_extra_mods` and `base_plt_mods` can add modules from excluded applications\n`exclude_mods` - a list of modules to exclude from PLT files and success typing analysis\n\nFor example, to warn on unmatched returns: \n{dialyzer, [{warnings, [unmatched_returns]}]}.\n\n*The direct dependent applications are listed in `applications` and `included_applications` of their .app files.\n**PLT files are named \"<prefix>_<otp_release>_plt\".\n***The base PLT is a PLT containing the core applications often required for a project's PLT. One base PLT is created per OTP version and stored in `base_plt_location`. A base PLT is used to build project PLTs.\n",
               "Run the Dialyzer analyzer on the project.","rebar3 dialyzer",
               [{update_plt,117,"update-plt",boolean,
                    "Enable updating the PLT. Default: true"},
                {succ_typings,115,"succ-typings",boolean,
                    "Enable success typing analysis. Default: true"}],
               [default],
               default},
           {provider,tree,rebar_prv_deps_tree,
               {[],[]},
               true,
               [lock],
               [],"Print dependency tree.","rebar3 tree",
               [{verbose,118,"verbose",undefined,
                    "Print repo and branch/tag/ref for git and hg deps"}],
               [default],
               default},
           {provider,deps,rebar_prv_deps,
               {[],[]},
               true,
               [app_discovery],
               "List dependencies. Those not matching lock files are followed by an asterisk (*).",
               "List dependencies","rebar3 deps",[],
               [default],
               default},
           {provider,cover,rebar_prv_cover,
               {[],[]},
               true,
               [lock],
               "Perform coverage analysis.","Perform coverage analysis.",
               "rebar3 cover",
               [{reset,114,"reset",boolean,"Reset all coverdata."},
                {verbose,118,"verbose",boolean,"Print coverage analysis."},
                {min_coverage,109,"min_coverage",integer,
                    "Mandate a coverage percentage required to succeed (0..100)"}],
               [test],
               default},
           {provider,compile,rebar_prv_compile,
               {[],[]},
               true,
               [lock],
               "Compile apps .app.src and .erl files.",
               "Compile apps .app.src and .erl files.","rebar3 compile",
               [{deps_only,100,"deps_only",undefined,
                    "Only compile dependencies, no project apps will be built."}],
               [default],
               default},
           {provider,ct,rebar_prv_common_test,
               {[],[]},
               true,
               [lock],
               "Run Common Tests.","Run Common Tests.","rebar3 ct",
               [{dir,undefined,"dir",string,
                    "List of additional directories containing test suites"},
                {suite,undefined,"suite",string,"List of test suites to run"},
                {group,undefined,"group",string,"List of test groups to run"},
                {testcase,undefined,"case",string,"List of test cases to run"},
                {label,undefined,"label",string,"Test label"},
                {config,undefined,"config",string,"List of config files"},
                {spec,undefined,"spec",string,"List of test specifications"},
                {join_specs,undefined,"join_specs",boolean,
                    "Merge all test specifications and perform a single test run"},
                {allow_user_terms,undefined,"allow_user_terms",boolean,
                    "Allow user defined config values in config files"},
                {logdir,undefined,"logdir",string,"Log folder"},
                {logopts,undefined,"logopts",string,
                    "Options for common test logging"},
                {verbosity,undefined,"verbosity",integer,"Verbosity"},
                {cover,99,"cover",{boolean,false},"Generate cover data"},
                {cover_export_name,undefined,"cover_export_name",string,
                    "Base name of the coverdata file to write"},
                {repeat,undefined,"repeat",integer,
                    "How often to repeat tests"},
                {duration,undefined,"duration",string,
                    "Max runtime (format: HHMMSS)"},
                {until,undefined,"until",string,"Run until (format: HHMMSS)"},
                {force_stop,undefined,"force_stop",string,
                    "Force stop on test timeout (true | false | skip_rest)"},
                {basic_html,undefined,"basic_html",boolean,"Show basic HTML"},
                {stylesheet,undefined,"stylesheet",string,
                    "CSS stylesheet to apply to html output"},
                {decrypt_key,undefined,"decrypt_key",string,
                    "Path to key for decrypting config"},
                {decrypt_file,undefined,"decrypt_file",string,
                    "Path to file containing key for decrypting config"},
                {abort_if_missing_suites,undefined,"abort_if_missing_suites",
                    {boolean,true},
                    "Abort if suites are missing"},
                {multiply_timetraps,undefined,"multiply_timetraps",integer,[]},
                {scale_timetraps,undefined,"scale_timetraps",boolean,
                    "Scale timetraps"},
                {create_priv_dir,undefined,"create_priv_dir",string,
                    "Create priv dir (auto_per_run | auto_per_tc | manual_per_tc)"},
                {include,undefined,"include",string,
                    "Directories containing additional include files"},
                {readable,undefined,"readable",string,
                    "Shows test case names and only displays logs to shell on failures (true | compact | false)"},
                {verbose,118,"verbose",boolean,"Verbose output"},
                {name,undefined,"name",atom,"Gives a long name to the node"},
                {sname,undefined,"sname",atom,
                    "Gives a short name to the node"},
                {setcookie,undefined,"setcookie",atom,
                    "Sets the cookie if the node is distributed"},
                {sys_config,undefined,"sys_config",string,
                    "List of application config files"},
                {compile_only,undefined,"compile_only",boolean,
                    "Compile modules in the project with the test configuration but do not run the tests"},
                {retry,undefined,"retry",boolean,
                    "Experimental feature. If any specification for previously failing test is found, runs them."},
                {fail_fast,undefined,"fail_fast",
                    {boolean,false},
                    "Experimental feature. If any test fails, the run is aborted. Since common test does not support this natively, we abort the rebar3 run on a failure. This May break CT's disk logging and other rebar3 features."}],
               [test],
               default},
           {provider,clean,rebar_prv_clean,
               {[],[]},
               true,
               [app_discovery,install_deps],
               "Remove compiled beam files from apps.",
               "Remove compiled beam files from apps.","rebar3 clean",
               [{all,97,"all",undefined,"Clean all apps include deps"},
                {profile,112,"profile",string,
                    "Clean under profile. Equivalent to `rebar3 as <profile> clean`"}],
               [default],
               default},
           {provider,compile,rebar_prv_bare_compile,
               {[],[]},
               false,
               [{default,app_discovery}],
               [],[],[],
               [{paths,112,"paths",string,
                    "Wildcard paths of ebin directories to add to code path, separated by a colon"},
                {separator,115,"separator",string,
                    "In case of multiple return paths, the separator character to use to join them."}],
               [default],
               bare},
           {provider,as,rebar_prv_as,
               {[],[]},
               true,[],
               "Higher order provider for running multiple tasks in a sequence as a certain profiles.",
               "Higher order provider for running multiple tasks in a sequence as a certain profiles.",
               "rebar3 as <profile1>,<profile2>,... <task1>, <task2>, ...",
               [{profile,undefined,undefined,string,"Profiles to run as."}],
               [default],
               default},
           {provider,app_discovery,rebar_prv_app_discovery,
               {[],[]},
               false,[],[],[],[],[],
               [default],
               default}],
          false}],
     []},
 {rebar3_proper,init,1,
     [{file,
          "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper/src/rebar3_proper.erl"},
      {line,7}]},
 {rebar_state,'-create_logic_providers/2-fun-0-',2,
     [{file,"/opt/rebar3-3.9.0/src/rebar_state.erl"},{line,479}]},
 {lists,foldl,3,[{file,"lists.erl"},{line,1263}]},
 {rebar_state,create_logic_providers,2,
     [{file,"/opt/rebar3-3.9.0/src/rebar_state.erl"},{line,478}]},
 {rebar_plugins,'-handle_plugins/4-fun-0-',4,
     [{file,"/opt/rebar3-3.9.0/src/rebar_plugins.erl"},{line,101}]},
 {lists,foldl,3,[{file,"lists.erl"},{line,1263}]},
 {rebar_plugins,handle_plugins,4,
     [{file,"/opt/rebar3-3.9.0/src/rebar_plugins.erl"},{line,99}]}]

{state_t,"/home/ne/Projects/ChicagoBoss",
    {dict,22,16,16,8,80,48,
        {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
        {{[],
          [[{deps,default},
            {<<"boss_db">>,
             {git,"https://github.com/ErlyORM/boss_db.git",{tag,"0.9.0"}}},
            {<<"tinymq">>,
             {git,"https://github.com/ChicagoBoss/tinymq.git",{tag,"v0.9.0"}}},
            {<<"erlydtl">>,
             {git,"https://github.com/erlydtl/erlydtl.git",{ref,"118c176"}}},
            {<<"gen_smtp">>,
             {git,"https://github.com/Vagabond/gen_smtp.git",{tag,"0.11.0"}}},
            {<<"iso8601">>,
             {git,"https://github.com/danikp/erlang_iso8601.git",
                 {ref,"ae6a052017"}}},
            {<<"mimetypes">>,
             {git,"https://github.com/spawngrid/mimetypes.git",
                 {branch,master}}},
            {<<"mochiweb">>,
             {git,"https://github.com/mochi/mochiweb.git",{ref,"53a9607"}}},
            {<<"cowboy">>,
             {git,"https://github.com/ninenines/cowboy.git",{tag,"2.6.1"}}},
            {<<"simple_bridge">>,
             {git,"https://github.com/nitrogen/simple_bridge.git",
                 {ref,"1938ec7"}}},
            {<<"boss_db">>,
             {git,"https://github.com/ErlyORM/boss_db.git",
                 {ref,"20060a061d3c4120929e4a4fedae1bb5e5830426"}},
             0},
            {<<"cowboy">>,
             {git,"https://github.com/ninenines/cowboy.git",
                 {ref,"e0254cdcb002d26a601d087b536d2b7e9be1f1f7"}},
             0},
            {<<"erlydtl">>,
             {git,"https://github.com/erlydtl/erlydtl.git",
                 {ref,"118c176f61a0c466516c30502a1498ae3c40b545"}},
             0},
            {<<"gen_smtp">>,
             {git,"https://github.com/Vagabond/gen_smtp.git",
                 {ref,"2ea8bb995adf32102f523cef93ae98e287ac77d1"}},
             0},
            {<<"iso8601">>,
             {git,"https://github.com/danikp/erlang_iso8601.git",
                 {ref,"ae6a052017f44f995102f73993289e892af16c5d"}},
             0},
            {<<"mimetypes">>,
             {git,"https://github.com/spawngrid/mimetypes.git",
                 {ref,"091a76398319e041fab444249ae5042500f3abaa"}},
             0},
            {<<"mochiweb">>,
             {git,"https://github.com/mochi/mochiweb.git",
                 {ref,"53a9607510b7ae4c662305fa978c73edf06c4cb2"}},
             0},
            {<<"simple_bridge">>,
             {git,"https://github.com/nitrogen/simple_bridge.git",
                 {ref,"1938ec77b499884cfbea197baf52e891adbd2418"}},
             0},
            {<<"tinymq">>,
             {git,"https://github.com/ChicagoBoss/tinymq.git",
                 {ref,"24e8b52d679921c89144deda999039ca52c846f1"}},
             0}],
           [{plugins,default},rebar3_proper],
           [{project_plugins,default}],
           [{locks,default},
            {<<"aleppo">>,
             {git,"https://github.com/ErlyORM/aleppo.git",
                 {ref,"6049c5754918350af6202adf90ab71208732db12"}},
             1},
            {<<"boss_db">>,
             {git,"https://github.com/ErlyORM/boss_db.git",
                 {ref,"20060a061d3c4120929e4a4fedae1bb5e5830426"}},
             0},
            {<<"cowboy">>,
             {git,"https://github.com/ninenines/cowboy.git",
                 {ref,"e0254cdcb002d26a601d087b536d2b7e9be1f1f7"}},
             0},
            {<<"cowlib">>,
             {git,"https://github.com/ninenines/cowlib",
                 {ref,"8588724cf91ddbb53b9c35ed665866556b217323"}},
             1},
            {<<"ddb">>,
             {git,"https://github.com/ErlyORM/ddb.git",
                 {ref,"585efb98729a3a19ddfdfe9e96dad80d4cabc5c9"}},
             1},
            {<<"dh_date">>,
             {git,"https://github.com/daleharvey/dh_date.git",
                 {ref,"23e5a61381d1f155520958ff28eba6a3480e9a10"}},
             1},
            {<<"epgsql">>,
             {git,"https://github.com/epgsql/epgsql.git",
                 {ref,"3ee6e9c612a5388f0722d90051afaa3f4fd72c63"}},
             1},
            {<<"erlando">>,
             {git,"https://github.com/ChicagoBoss/erlando.git",
                 {ref,"680688f246d84a2be6ce35764f3cb4f8356008f9"}},
             1},
            {<<"erlmc">>,
             {git,"https://github.com/layerhq/erlmc.git",
                 {ref,"c5280dadc6b64912e100d812a4aa95de8dea4636"}},
             1},
            {<<"erlydtl">>,
             {git,"https://github.com/erlydtl/erlydtl.git",
                 {ref,"118c176f61a0c466516c30502a1498ae3c40b545"}},
             0},
            {<<"ets_cache">>,
             {git,"https://github.com/cuongth/ets_cache.git",
                 {ref,"c7a17204cd9602b677540e9c73d10e6f6f7da146"}},
             1},
            {<<"gen_smtp">>,
             {git,"https://github.com/Vagabond/gen_smtp.git",
                 {ref,"2ea8bb995adf32102f523cef93ae98e287ac77d1"}},
             0},
            {<<"goldrush">>,
             {pkg,<<"goldrush">>,<<"0.1.9">>,
                 <<"F06E5D5F1277DA5C413E84D5A2924174182FB108DABB39D5EC548B27424CD106">>},
             2},
            {<<"ibrowse">>,
             {git,"https://github.com/cmullaparthi/ibrowse.git",
                 {ref,"ffe353054e964ac103d38a49a4950b5805927d93"}},
             2},
            {<<"iso8601">>,
             {git,"https://github.com/danikp/erlang_iso8601.git",
                 {ref,"ae6a052017f44f995102f73993289e892af16c5d"}},
             0},
            {<<"jsx">>,
             {git,"https://github.com/talentdeficit/jsx.git",
                 {ref,"fc2a001073f2300ba38427c23e83d5673c020542"}},
             2},
            {<<"lager">>,
             {git,"https://github.com/erlang-lager/lager.git",
                 {ref,"69b4ada2341b8ab2cf5c8e464ac936e5e4a9f62b"}},
             1},
            {<<"medici">>,
             {git,"https://github.com/ErlyORM/medici.git",
                 {ref,"bb6167459d19f48089b2bd46f753bf70fce495fe"}},
             1},
            {<<"mimetypes">>,
             {git,"https://github.com/spawngrid/mimetypes.git",
                 {ref,"091a76398319e041fab444249ae5042500f3abaa"}},
             0},
            {<<"mochiweb">>,
             {git,"https://github.com/mochi/mochiweb.git",
                 {ref,"53a9607510b7ae4c662305fa978c73edf06c4cb2"}},
             0},
            {<<"mysql">>,
             {git,"https://github.com/ErlyORM/erlang-mysql-driver.git",
                 {ref,"5308a6536369739371baa21d42d29d8e417aacf2"}},
             1},
            {<<"pmod_transform">>,
             {git,"git://github.com/erlang/pmod_transform.git",
                 {ref,"8d5ab70f087cfbb634d789f7489f09c6d39c5c8b"}},
             2},
            {<<"poolboy">>,
             {git,"https://github.com/devinus/poolboy.git",
                 {ref,"29be47db8c2be38b18c908e43a80ebb7b9b6116b"}},
             1},
            {<<"ranch">>,
             {git,"https://github.com/ninenines/ranch",
                 {ref,"3190aef88aea04d6dce8545fe9b4574288903f44"}},
             1},
            {<<"redo">>,
             {git,"https://github.com/heroku/redo.git",
                 {ref,"cd75a11697d69e38b6e5e1750b7ec18414fb60eb"}},
             1},
            {<<"simple_bridge">>,
             {git,"https://github.com/nitrogen/simple_bridge.git",
                 {ref,"1938ec77b499884cfbea197baf52e891adbd2418"}},
             0},
            {<<"stacktrace_compat">>,
             {git,"git://github.com/g-andrade/stacktrace_compat",
                 {ref,"fe6238499a216f6f94836be9ec0b3956ea5c6101"}},
             1},
            {<<"tiny_pq">>,
             {git,"https://github.com/ChicagoBoss/tiny_pq.git",
                 {ref,"5f13986299f0d81a26235cebcfb7ff87e207edfe"}},
             1},
            {<<"tinymq">>,
             {git,"https://github.com/ChicagoBoss/tinymq.git",
                 {ref,"24e8b52d679921c89144deda999039ca52c846f1"}},
             0},
            {<<"uuid">>,
             {git,"https://github.com/avtobiff/erlang-uuid.git",
                 {ref,"cb02a2039a9b29dd2eef0446039c9c6e164df9ef"}},
             1}]],
          [[template_dir,46],
           [dialyzer,
            {warnings,
                [error_handling,race_conditions,unmatched_returns,underspecs]},
            {get_warnings,false},
            {plt_apps,top_level_deps},
            {plt_extra_apps,[]},
            {plt_location,local},
            {plt_prefix,"boss"},
            {base_plt_apps,[stdlib,kernel,erts]},
            {base_plt_location,global},
            {base_plt_prefix,"rebar3"}],
           [caller|command_line],
           [base_dir,47,104,111,109,101,47,110,101,47,80,114,111,106,101,99,
            116,115,47,67,104,105,99,97,103,111,66,111,115,115,47,95,98,117,
            105,108,100],
           [deps_dir,112,108,117,103,105,110,115]],
          [[erl_opts,debug_info,warn_unused_vars,warn_unused_import,
            warn_exported_vars,
            {parse_transform,lager_transform},
            {parse_transform,cut},
            {parse_transform,do},
            {parse_transform,import_as}],
           [deps,
            {boss_db,".*",
                {git,"https://github.com/ErlyORM/boss_db.git",{tag,"0.9.0"}}},
            {tinymq,".*",
                {git,"https://github.com/ChicagoBoss/tinymq.git",
                    {tag,"v0.9.0"}}},
            {erlydtl,
                {git,"https://github.com/erlydtl/erlydtl.git",
                    {ref,"118c176"}}},
            {gen_smtp,
                {git,"https://github.com/Vagabond/gen_smtp.git",
                    {tag,"0.11.0"}}},
            {iso8601,
                {git,"https://github.com/danikp/erlang_iso8601.git",
                    {ref,"ae6a052017"}}},
            {mimetypes,
                {git,"https://github.com/spawngrid/mimetypes.git",
                    {branch,master}}},
            {mochiweb,
                {git,"https://github.com/mochi/mochiweb.git",{ref,"53a9607"}}},
            {cowboy,
                {git,"https://github.com/ninenines/cowboy.git",{tag,"2.6.1"}}},
            {simple_bridge,
                {git,"https://github.com/nitrogen/simple_bridge.git",
                    {ref,"1938ec7"}}}],
           [lib_dirs,"deps/elixir/lib","deps"],
           [erlydtl_opts,
            {doc_root,"src/boss"},
            {out_dir,"ebin"},
            {source_ext,".dtl"},
            {module_ext,[]},
            {compiler_options,[debug_info]},
            report,return],
           [plugins,rebar3_proper],
           [profiles,
            {test,
                [{deps,[{proper,"1.1.1-beta"}]},
                 {erl_opts,[{d,'TEST'}]},
                 {extra_src_dirs,["test"]}]},
            {boss_test,[{erl_opts,[{d,boss_test}]}]},
            {prod,[]}],
           [defines],
           [overrides]],
          [[cover_enabled|true]],
          [[vsn_cache|
            {dict,0,16,16,8,80,48,
                {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
                {{[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]}}}],
           [force,48]],
          [],[],[],[],[],
          [[task,104,101,108,112]],
          [[shell,
            {config,"priv/sample_configs/boss.simple.config"},
            {apps,[boss]}]],
          [],[],[]}}},
    {dict,1,16,16,8,80,48,
        {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
        {{[],[],[],
          [[all_plugin_deps,
            "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper/ebin"]],
          [],[],[],[],[],[],[],[],[],[],[],[]}}},
    {dict,14,16,16,8,80,48,
        {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
        {{[],
          [[{deps,default},
            {<<"boss_db">>,
             {git,"https://github.com/ErlyORM/boss_db.git",{tag,"0.9.0"}}},
            {<<"tinymq">>,
             {git,"https://github.com/ChicagoBoss/tinymq.git",{tag,"v0.9.0"}}},
            {<<"erlydtl">>,
             {git,"https://github.com/erlydtl/erlydtl.git",{ref,"118c176"}}},
            {<<"gen_smtp">>,
             {git,"https://github.com/Vagabond/gen_smtp.git",{tag,"0.11.0"}}},
            {<<"iso8601">>,
             {git,"https://github.com/danikp/erlang_iso8601.git",
                 {ref,"ae6a052017"}}},
            {<<"mimetypes">>,
             {git,"https://github.com/spawngrid/mimetypes.git",
                 {branch,master}}},
            {<<"mochiweb">>,
             {git,"https://github.com/mochi/mochiweb.git",{ref,"53a9607"}}},
            {<<"cowboy">>,
             {git,"https://github.com/ninenines/cowboy.git",{tag,"2.6.1"}}},
            {<<"simple_bridge">>,
             {git,"https://github.com/nitrogen/simple_bridge.git",
                 {ref,"1938ec7"}}},
            {<<"boss_db">>,
             {git,"https://github.com/ErlyORM/boss_db.git",
                 {ref,"20060a061d3c4120929e4a4fedae1bb5e5830426"}},
             0},
            {<<"cowboy">>,
             {git,"https://github.com/ninenines/cowboy.git",
                 {ref,"e0254cdcb002d26a601d087b536d2b7e9be1f1f7"}},
             0},
            {<<"erlydtl">>,
             {git,"https://github.com/erlydtl/erlydtl.git",
                 {ref,"118c176f61a0c466516c30502a1498ae3c40b545"}},
             0},
            {<<"gen_smtp">>,
             {git,"https://github.com/Vagabond/gen_smtp.git",
                 {ref,"2ea8bb995adf32102f523cef93ae98e287ac77d1"}},
             0},
            {<<"iso8601">>,
             {git,"https://github.com/danikp/erlang_iso8601.git",
                 {ref,"ae6a052017f44f995102f73993289e892af16c5d"}},
             0},
            {<<"mimetypes">>,
             {git,"https://github.com/spawngrid/mimetypes.git",
                 {ref,"091a76398319e041fab444249ae5042500f3abaa"}},
             0},
            {<<"mochiweb">>,
             {git,"https://github.com/mochi/mochiweb.git",
                 {ref,"53a9607510b7ae4c662305fa978c73edf06c4cb2"}},
             0},
            {<<"simple_bridge">>,
             {git,"https://github.com/nitrogen/simple_bridge.git",
                 {ref,"1938ec77b499884cfbea197baf52e891adbd2418"}},
             0},
            {<<"tinymq">>,
             {git,"https://github.com/ChicagoBoss/tinymq.git",
                 {ref,"24e8b52d679921c89144deda999039ca52c846f1"}},
             0}],
           [{plugins,default},rebar3_proper],
           [{project_plugins,default}],
           [{locks,default},
            {<<"aleppo">>,
             {git,"https://github.com/ErlyORM/aleppo.git",
                 {ref,"6049c5754918350af6202adf90ab71208732db12"}},
             1},
            {<<"boss_db">>,
             {git,"https://github.com/ErlyORM/boss_db.git",
                 {ref,"20060a061d3c4120929e4a4fedae1bb5e5830426"}},
             0},
            {<<"cowboy">>,
             {git,"https://github.com/ninenines/cowboy.git",
                 {ref,"e0254cdcb002d26a601d087b536d2b7e9be1f1f7"}},
             0},
            {<<"cowlib">>,
             {git,"https://github.com/ninenines/cowlib",
                 {ref,"8588724cf91ddbb53b9c35ed665866556b217323"}},
             1},
            {<<"ddb">>,
             {git,"https://github.com/ErlyORM/ddb.git",
                 {ref,"585efb98729a3a19ddfdfe9e96dad80d4cabc5c9"}},
             1},
            {<<"dh_date">>,
             {git,"https://github.com/daleharvey/dh_date.git",
                 {ref,"23e5a61381d1f155520958ff28eba6a3480e9a10"}},
             1},
            {<<"epgsql">>,
             {git,"https://github.com/epgsql/epgsql.git",
                 {ref,"3ee6e9c612a5388f0722d90051afaa3f4fd72c63"}},
             1},
            {<<"erlando">>,
             {git,"https://github.com/ChicagoBoss/erlando.git",
                 {ref,"680688f246d84a2be6ce35764f3cb4f8356008f9"}},
             1},
            {<<"erlmc">>,
             {git,"https://github.com/layerhq/erlmc.git",
                 {ref,"c5280dadc6b64912e100d812a4aa95de8dea4636"}},
             1},
            {<<"erlydtl">>,
             {git,"https://github.com/erlydtl/erlydtl.git",
                 {ref,"118c176f61a0c466516c30502a1498ae3c40b545"}},
             0},
            {<<"ets_cache">>,
             {git,"https://github.com/cuongth/ets_cache.git",
                 {ref,"c7a17204cd9602b677540e9c73d10e6f6f7da146"}},
             1},
            {<<"gen_smtp">>,
             {git,"https://github.com/Vagabond/gen_smtp.git",
                 {ref,"2ea8bb995adf32102f523cef93ae98e287ac77d1"}},
             0},
            {<<"goldrush">>,
             {pkg,<<"goldrush">>,<<"0.1.9">>,
                 <<"F06E5D5F1277DA5C413E84D5A2924174182FB108DABB39D5EC548B27424CD106">>},
             2},
            {<<"ibrowse">>,
             {git,"https://github.com/cmullaparthi/ibrowse.git",
                 {ref,"ffe353054e964ac103d38a49a4950b5805927d93"}},
             2},
            {<<"iso8601">>,
             {git,"https://github.com/danikp/erlang_iso8601.git",
                 {ref,"ae6a052017f44f995102f73993289e892af16c5d"}},
             0},
            {<<"jsx">>,
             {git,"https://github.com/talentdeficit/jsx.git",
                 {ref,"fc2a001073f2300ba38427c23e83d5673c020542"}},
             2},
            {<<"lager">>,
             {git,"https://github.com/erlang-lager/lager.git",
                 {ref,"69b4ada2341b8ab2cf5c8e464ac936e5e4a9f62b"}},
             1},
            {<<"medici">>,
             {git,"https://github.com/ErlyORM/medici.git",
                 {ref,"bb6167459d19f48089b2bd46f753bf70fce495fe"}},
             1},
            {<<"mimetypes">>,
             {git,"https://github.com/spawngrid/mimetypes.git",
                 {ref,"091a76398319e041fab444249ae5042500f3abaa"}},
             0},
            {<<"mochiweb">>,
             {git,"https://github.com/mochi/mochiweb.git",
                 {ref,"53a9607510b7ae4c662305fa978c73edf06c4cb2"}},
             0},
            {<<"mysql">>,
             {git,"https://github.com/ErlyORM/erlang-mysql-driver.git",
                 {ref,"5308a6536369739371baa21d42d29d8e417aacf2"}},
             1},
            {<<"pmod_transform">>,
             {git,"git://github.com/erlang/pmod_transform.git",
                 {ref,"8d5ab70f087cfbb634d789f7489f09c6d39c5c8b"}},
             2},
            {<<"poolboy">>,
             {git,"https://github.com/devinus/poolboy.git",
                 {ref,"29be47db8c2be38b18c908e43a80ebb7b9b6116b"}},
             1},
            {<<"ranch">>,
             {git,"https://github.com/ninenines/ranch",
                 {ref,"3190aef88aea04d6dce8545fe9b4574288903f44"}},
             1},
            {<<"redo">>,
             {git,"https://github.com/heroku/redo.git",
                 {ref,"cd75a11697d69e38b6e5e1750b7ec18414fb60eb"}},
             1},
            {<<"simple_bridge">>,
             {git,"https://github.com/nitrogen/simple_bridge.git",
                 {ref,"1938ec77b499884cfbea197baf52e891adbd2418"}},
             0},
            {<<"stacktrace_compat">>,
             {git,"git://github.com/g-andrade/stacktrace_compat",
                 {ref,"fe6238499a216f6f94836be9ec0b3956ea5c6101"}},
             1},
            {<<"tiny_pq">>,
             {git,"https://github.com/ChicagoBoss/tiny_pq.git",
                 {ref,"5f13986299f0d81a26235cebcfb7ff87e207edfe"}},
             1},
            {<<"tinymq">>,
             {git,"https://github.com/ChicagoBoss/tinymq.git",
                 {ref,"24e8b52d679921c89144deda999039ca52c846f1"}},
             0},
            {<<"uuid">>,
             {git,"https://github.com/avtobiff/erlang-uuid.git",
                 {ref,"cb02a2039a9b29dd2eef0446039c9c6e164df9ef"}},
             1}]],
          [[template_dir,46],
           [dialyzer,
            {warnings,
                [error_handling,race_conditions,unmatched_returns,underspecs]},
            {get_warnings,false},
            {plt_apps,top_level_deps},
            {plt_extra_apps,[]},
            {plt_location,local},
            {plt_prefix,"boss"},
            {base_plt_apps,[stdlib,kernel,erts]},
            {base_plt_location,global},
            {base_plt_prefix,"rebar3"}]],
          [[erl_opts,debug_info,warn_unused_vars,warn_unused_import,
            warn_exported_vars,
            {parse_transform,lager_transform},
            {parse_transform,cut},
            {parse_transform,do},
            {parse_transform,import_as}],
           [deps,
            {boss_db,".*",
                {git,"https://github.com/ErlyORM/boss_db.git",{tag,"0.9.0"}}},
            {tinymq,".*",
                {git,"https://github.com/ChicagoBoss/tinymq.git",
                    {tag,"v0.9.0"}}},
            {erlydtl,
                {git,"https://github.com/erlydtl/erlydtl.git",
                    {ref,"118c176"}}},
            {gen_smtp,
                {git,"https://github.com/Vagabond/gen_smtp.git",
                    {tag,"0.11.0"}}},
            {iso8601,
                {git,"https://github.com/danikp/erlang_iso8601.git",
                    {ref,"ae6a052017"}}},
            {mimetypes,
                {git,"https://github.com/spawngrid/mimetypes.git",
                    {branch,master}}},
            {mochiweb,
                {git,"https://github.com/mochi/mochiweb.git",{ref,"53a9607"}}},
            {cowboy,
                {git,"https://github.com/ninenines/cowboy.git",{tag,"2.6.1"}}},
            {simple_bridge,
                {git,"https://github.com/nitrogen/simple_bridge.git",
                    {ref,"1938ec7"}}}],
           [lib_dirs,"deps/elixir/lib","deps"],
           [erlydtl_opts,
            {doc_root,"src/boss"},
            {out_dir,"ebin"},
            {source_ext,".dtl"},
            {module_ext,[]},
            {compiler_options,[debug_info]},
            report,return],
           [plugins,rebar3_proper],
           [profiles,
            {test,[{deps,[{proper,"1.1.1-beta"}]}]},
            {boss_test,[{erl_opts,[{d,boss_test}]}]},
            {prod,[]}]],
          [[cover_enabled|true]],
          [],[],[],[],[],[],[],
          [[shell,
            {config,"priv/sample_configs/boss.simple.config"},
            {apps,[boss]}]],
          [],[],[]}}},
    "/usr/local/bin/rebar3",
    [{app_info_t,<<"rebar3_proper">>,
         "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper/src/rebar3_proper.app.src",
         undefined,
         "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper/ebin/rebar3_proper.app",
         "0.11.1",root,
         [{description,"Run PropEr test suites"},
          {vsn,"0.11.1"},
          {registered,[]},
          {applications,[kernel,stdlib,proper]},
          {env,[]},
          {modules,[rebar3_proper,rebar3_proper_prv]},
          {maintainers,["Fred Hebert"]},
          {licenses,["BSD"]},
          {links,
              [{"Github","https://github.com/ferd/rebar3_proper"},
               {"PropEr","http://proper.softlab.ntua.gr/"}]}],
         [kernel,stdlib,proper],
         [],
         [default],
         {dict,4,16,16,8,80,48,
             {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
             {{[],
               [[{deps,default}],[{plugins,default}],[{locks,default}]],
               [],
               [[overrides]],
               [],[],[],[],[],[],[],[],[],[],[],[]}}},
         {dict,4,16,16,8,80,48,
             {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
             {{[],
               [[{deps,default}],[{plugins,default}],[{locks,default}]],
               [],
               [[overrides]],
               [],[],[],[],[],[],[],[],[],[],[],[]}}},
         0,
         "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper",
         "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper",
         undefined,
         {pkg,<<"rebar3_proper">>,<<"0.11.1">>,
             <<"AEE40A815A90F72C5B463C7D3329044A7846051F1E965DE58F8F1F6130056E73">>,
             #{api_url => <<"https://hex.pm/api">>,
               http_adapter => hex_http_httpc,
               http_adapter_config => #{profile => rebar},
               http_user_agent_fragment => <<"(rebar3/3.9.0) (httpc)">>,
               name => <<"hexpm">>,repo_name => <<"hexpm">>,
               repo_public_key =>
                   <<"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApqREcFDt5vV21JVe2QNB\nEdvzk6w36aNFhVGWN5toNJRjRJ6m4hIuG4KaXtDWVLjnvct6MYMfqhC79HAGwyF+\nIqR6Q6a5bbFSsImgBJwz1oadoVKD6ZNetAuCIK84cjMrEFRkELtEIPNHblCzUkkM\n3rS9+DPlnfG8hBvGi6tvQIuZmXGCxF/73hU0/MyGhbmEjIKRtG6b0sJYKelRLTPW\nXgK7s5pESgiwf2YC/2MGDXjAJfpfCd0RpLdvd4eRiXtVlE9qO9bND94E7PgQ/xqZ\nJ1i2xWFndWa6nfFnRxZmCStCOZWYYPlaxr+FZceFbpMwzTNs4g3d4tLNUcbKAIH4\n0wIDAQAB\n-----END PUBLIC KEY-----">>,
               repo_url => <<"https://repo.hex.pm">>,repo_verify => true,
               repo_verify_origin => true}},
         false,false,true,undefined,true}],
    [default],
    default,[],
    {[],[]},
    undefined,[],[],
    [{app_info_t,<<"rebar3_proper">>,
         "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper/src/rebar3_proper.app.src",
         undefined,
         "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper/ebin/rebar3_proper.app",
         "0.11.1",root,
         [{description,"Run PropEr test suites"},
          {vsn,"0.11.1"},
          {registered,[]},
          {applications,[kernel,stdlib,proper]},
          {env,[]},
          {modules,[rebar3_proper,rebar3_proper_prv]},
          {maintainers,["Fred Hebert"]},
          {licenses,["BSD"]},
          {links,
              [{"Github","https://github.com/ferd/rebar3_proper"},
               {"PropEr","http://proper.softlab.ntua.gr/"}]}],
         [kernel,stdlib,proper],
         [],
         [default,prod],
         {dict,4,16,16,8,80,48,
             {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
             {{[],
               [[{deps,default}],[{plugins,default}],[{locks,default}]],
               [],
               [[overrides]],
               [],[],[],[],[],[],[],[],[],[],[],[]}}},
         {dict,4,16,16,8,80,48,
             {[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]},
             {{[],
               [[{deps,default}],[{plugins,default}],[{locks,default}]],
               [],
               [[overrides]],
               [],[],[],[],[],[],[],[],[],[],[],[]}}},
         0,
         "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper",
         "/home/ne/Projects/ChicagoBoss/_build/default/plugins/rebar3_proper",
         undefined,
         {pkg,<<"rebar3_proper">>,<<"0.11.1">>,
             <<"AEE40A815A90F72C5B463C7D3329044A7846051F1E965DE58F8F1F6130056E73">>,
             #{api_url => <<"https://hex.pm/api">>,
               http_adapter => hex_http_httpc,
               http_adapter_config => #{profile => rebar},
               http_user_agent_fragment => <<"(rebar3/3.9.0) (httpc)">>,
               name => <<"hexpm">>,repo_name => <<"hexpm">>,
               repo_public_key =>
                   <<"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApqREcFDt5vV21JVe2QNB\nEdvzk6w36aNFhVGWN5toNJRjRJ6m4hIuG4KaXtDWVLjnvct6MYMfqhC79HAGwyF+\nIqR6Q6a5bbFSsImgBJwz1oadoVKD6ZNetAuCIK84cjMrEFRkELtEIPNHblCzUkkM\n3rS9+DPlnfG8hBvGi6tvQIuZmXGCxF/73hU0/MyGhbmEjIKRtG6b0sJYKelRLTPW\nXgK7s5pESgiwf2YC/2MGDXjAJfpfCd0RpLdvd4eRiXtVlE9qO9bND94E7PgQ/xqZ\nJ1i2xWFndWa6nfFnRxZmCStCOZWYYPlaxr+FZceFbpMwzTNs4g3d4tLNUcbKAIH4\n0wIDAQAB\n-----END PUBLIC KEY-----">>,
               repo_url => <<"https://repo.hex.pm">>,repo_verify => true,
               repo_verify_origin => true}},
         false,false,true,undefined,true}],
    [],
    [rebar_compiler_xrl,rebar_compiler_yrl,rebar_compiler_mib,
     rebar_compiler_erl],
    [],
    [{resource,hg,rebar_hg_resource,#{},rebar_resource_v2},
     {resource,pkg,rebar_pkg_resource,
         #{base_config =>
               #{http_adapter => hex_http_httpc,
                 http_adapter_config => #{profile => rebar},
                 http_user_agent_fragment => <<"(rebar3/3.9.0) (httpc)">>},
           repos =>
               [#{api_url => <<"https://hex.pm/api">>,
                  http_adapter => hex_http_httpc,
                  http_adapter_config => #{profile => rebar},
                  http_user_agent_fragment => <<"(rebar3/3.9.0) (httpc)">>,
                  name => <<"hexpm">>,repo_name => <<"hexpm">>,
                  repo_public_key =>
                      <<"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApqREcFDt5vV21JVe2QNB\nEdvzk6w36aNFhVGWN5toNJRjRJ6m4hIuG4KaXtDWVLjnvct6MYMfqhC79HAGwyF+\nIqR6Q6a5bbFSsImgBJwz1oadoVKD6ZNetAuCIK84cjMrEFRkELtEIPNHblCzUkkM\n3rS9+DPlnfG8hBvGi6tvQIuZmXGCxF/73hU0/MyGhbmEjIKRtG6b0sJYKelRLTPW\nXgK7s5pESgiwf2YC/2MGDXjAJfpfCd0RpLdvd4eRiXtVlE9qO9bND94E7PgQ/xqZ\nJ1i2xWFndWa6nfFnRxZmCStCOZWYYPlaxr+FZceFbpMwzTNs4g3d4tLNUcbKAIH4\n0wIDAQAB\n-----END PUBLIC KEY-----">>,
                  repo_url => <<"https://repo.hex.pm">>,repo_verify => true,
                  repo_verify_origin => true}]},
         rebar_resource_v2},
     {resource,git,rebar_git_resource,#{},rebar_resource_v2}],
    [{provider,xref,rebar_prv_xref,
         {[],[]},
         true,
         [compile],
         ["Run cross reference analysis.","\n","\n",86,97,108,105,100,32,114,
          101,98,97,114,46,99,111,110,102,105,103,32,111,112,116,105,111,110,
          115,58,"\n",32,32,
          [123,["xref_warnings",44,"false"],125],
          "\n",32,32,
          [123,["xref_extra_paths",44,"[]"],125],
          "\n",32,32,
          [123,
           ["xref_checks",44,
            [91,
             ["undefined_function_calls",44,"undefined_functions",44,
              "locals_not_used",44,10,
              [32,[32,["   ",32,32,32],"   ",32,32,32],32,32],
              "exports_not_used",44,"deprecated_function_calls",44,10,
              [32,[32,["   ",32,32,32],"   ",32,32,32],32,32],
              "deprecated_functions"],
             93]],
           125],
          "\n",32,32,
          [123,
           ["xref_queries",44,
            [91,
             [[123,
               ["\"(xc - uc) || (xu - x - b - (\\\"mod\\\":\\\".*foo\\\"/\\\"4\\\"))\"",
                44,10,
                [32,32,[[32,"   ",32,32,32],32,"   ",32,32,32],32,32],
                "[]"],
               125]],
             93]],
           125],
          "\n"],
         "Run cross reference analysis.","rebar3 xref",[],
         [default],
         default},
     {provider,version,rebar_prv_version,
         {[],[]},
         true,[],"Print version for rebar and current Erlang.",
         "Print version for rebar and current Erlang.","rebar3 version",[],
         [default],
         default},
     {provider,upgrade,rebar_prv_upgrade,
         {[],[]},
         true,
         [lock],
         "Upgrade project dependencies. Mentioning no application will upgrade all dependencies. To upgrade specific dependencies, their names can be listed in the command.",
         "Upgrade dependencies.","rebar3 upgrade [cowboy[,ranch]]",
         [{package,undefined,undefined,string,
              "List of packages to upgrade. If not specified, all dependencies are upgraded."}],
         [default],
         default},
     {provider,update,rebar_prv_update,
         {[],[]},
         true,[],"Update package index.","Update package index.",
         "rebar3 update",[],
         [default],
         default},
     {provider,unlock,rebar_prv_unlock,
         {[],[]},
         true,[],
         "Unlock project dependencies. Mentioning no application will unlock all dependencies. To unlock specific dependencies, their name can be listed in the command.",
         "Unlock dependencies.",[],
         [{package,undefined,undefined,string,
              "List of packages to unlock. If not specified, all dependencies are unlocked."}],
         [default],
         default},
     {provider,tar,rebar_prv_tar,
         {[],[]},
         true,
         [release],
         "Tar archive of release built of project.",
         "Tar archive of release built of project.","rebar3 tar",
         [{relname,110,"relname",string,
              "Specify the name for the release that will be generated"},
          {relvsn,118,"relvsn",string,"Specify the version for the release"},
          {goal,103,"goal",string,
              "Specify a target constraint on the system. These are usually the OTP"},
          {upfrom,117,"upfrom",string,
              "Only valid with relup target, specify the release to upgrade from"},
          {output_dir,111,"output-dir",string,
              "The output directory for the release. This is `./` by default."},
          {help,104,"help",undefined,"Print usage"},
          {lib_dir,108,"lib-dir",string,
              "Additional dir that should be searched for OTP Apps"},
          {path,112,"path",string,"Additional dir to add to the code path"},
          {default_libs,undefined,"default-libs",boolean,
              "Whether to use the default system added lib dirs (means you must add them all manually). Default is true"},
          {log_level,86,"verbose",
              {integer,2},
              "Verbosity level, maybe between 0 and 3"},
          {dev_mode,100,"dev-mode",boolean,
              "Symlink the applications and configuration into the release instead of copying"},
          {include_erts,105,"include-erts",string,
              "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
          {override,97,"override",string,
              "Provide an app name and a directory to override in the form <appname>:<app directory>"},
          {config,99,"config",{string,[]},"The path to a config file"},
          {overlay_vars,undefined,"overlay_vars",string,
              "Path to a file of overlay variables"},
          {vm_args,undefined,"vm_args",string,
              "Path to a file to use for vm.args"},
          {sys_config,undefined,"sys_config",string,
              "Path to a file to use for sys.config"},
          {system_libs,undefined,"system_libs",string,
              "Path to dir of Erlang system libs"},
          {version,undefined,"version",undefined,"Print relx version"},
          {root_dir,114,"root",string,"The project root directory"}],
         [default],
         default},
     {provider,state,rebar_prv_state,
         {[],[]},
         false,[],"Display rebar configuration for debugging purpose",
         "Print current configuration state","rebar3 state",[],
         [default],
         default},
     {provider,shell,rebar_prv_shell,
         {[],[]},
         true,
         [compile],
         "Start a shell with project and deps preloaded similar to~n'erl -pa ebin -pa deps/*/ebin'.~n",
         "Run shell with project apps and deps in path.","rebar3 shell",
         [{config,undefined,"config",string,
              "Path to the config file to use. Defaults to {shell, [{config, File}]} and then the relx sys.config file if not specified."},
          {name,undefined,"name",atom,"Gives a long name to the node."},
          {sname,undefined,"sname",atom,"Gives a short name to the node."},
          {setcookie,undefined,"setcookie",atom,
              "Sets the cookie if the node is distributed."},
          {script_file,undefined,"script",string,
              "Path to an escript file to run before starting the project apps. Defaults to rebar.config {shell, [{script_file, File}]} if not specified."},
          {apps,undefined,"apps",string,
              "A list of apps to boot before starting the shell. (E.g. --apps app1,app2,app3) Defaults to rebar.config {shell, [{apps, Apps}]} or relx apps if not specified."},
          {relname,114,"relname",atom,
              "Name of the release to use as a template for the shell session"},
          {relvsn,118,"relvsn",string,
              "Version of the release to use for the shell session"},
          {start_clean,undefined,"start-clean",boolean,
              "Cancel any applications in the 'apps' list or release."},
          {user_drv_args,undefined,"user_drv_args",string,
              "Arguments passed to user_drv start function for creating custom shells."}],
         [default],
         default},
     {provider,repos,rebar_prv_repos,
         {[],[]},
         false,[],"Display repository configuration for debugging purpose",
         "Print current package repository configuration","rebar3 repos",[],
         [default],
         default},
     {provider,report,rebar_prv_report,
         {[],[]},
         true,[],
         "Provide a crash report to be sent to the rebar3 issues page.",
         "Provide a crash report to be sent to the rebar3 issues page.",
         "rebar3 report \"<task>\"",
         [{task,undefined,undefined,string,"Task to print details for."}],
         [default],
         default},
     {provider,relup,rebar_prv_relup,
         {[],[]},
         true,
         [release],
         "Create relup of releases.","Create relup of releases.",
         "rebar3 relup",
         [{relname,110,"relname",string,
              "Specify the name for the release that will be generated"},
          {relvsn,118,"relvsn",string,"Specify the version for the release"},
          {goal,103,"goal",string,
              "Specify a target constraint on the system. These are usually the OTP"},
          {upfrom,117,"upfrom",string,
              "Only valid with relup target, specify the release to upgrade from"},
          {output_dir,111,"output-dir",string,
              "The output directory for the release. This is `./` by default."},
          {help,104,"help",undefined,"Print usage"},
          {lib_dir,108,"lib-dir",string,
              "Additional dir that should be searched for OTP Apps"},
          {path,112,"path",string,"Additional dir to add to the code path"},
          {default_libs,undefined,"default-libs",boolean,
              "Whether to use the default system added lib dirs (means you must add them all manually). Default is true"},
          {log_level,86,"verbose",
              {integer,2},
              "Verbosity level, maybe between 0 and 3"},
          {dev_mode,100,"dev-mode",boolean,
              "Symlink the applications and configuration into the release instead of copying"},
          {include_erts,105,"include-erts",string,
              "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
          {override,97,"override",string,
              "Provide an app name and a directory to override in the form <appname>:<app directory>"},
          {config,99,"config",{string,[]},"The path to a config file"},
          {overlay_vars,undefined,"overlay_vars",string,
              "Path to a file of overlay variables"},
          {vm_args,undefined,"vm_args",string,
              "Path to a file to use for vm.args"},
          {sys_config,undefined,"sys_config",string,
              "Path to a file to use for sys.config"},
          {system_libs,undefined,"system_libs",string,
              "Path to dir of Erlang system libs"},
          {version,undefined,"version",undefined,"Print relx version"},
          {root_dir,114,"root",string,"The project root directory"}],
         [default],
         default},
     {provider,release,rebar_prv_release,
         {[],[]},
         true,
         [compile],
         "Build release of project.","Build release of project.",
         "rebar3 release",
         [{relname,110,"relname",string,
              "Specify the name for the release that will be generated"},
          {relvsn,118,"relvsn",string,"Specify the version for the release"},
          {goal,103,"goal",string,
              "Specify a target constraint on the system. These are usually the OTP"},
          {upfrom,117,"upfrom",string,
              "Only valid with relup target, specify the release to upgrade from"},
          {output_dir,111,"output-dir",string,
              "The output directory for the release. This is `./` by default."},
          {help,104,"help",undefined,"Print usage"},
          {lib_dir,108,"lib-dir",string,
              "Additional dir that should be searched for OTP Apps"},
          {path,112,"path",string,"Additional dir to add to the code path"},
          {default_libs,undefined,"default-libs",boolean,
              "Whether to use the default system added lib dirs (means you must add them all manually). Default is true"},
          {log_level,86,"verbose",
              {integer,2},
              "Verbosity level, maybe between 0 and 3"},
          {dev_mode,100,"dev-mode",boolean,
              "Symlink the applications and configuration into the release instead of copying"},
          {include_erts,105,"include-erts",string,
              "If true include a copy of erts used to build with, if a path include erts at that path. If false, do not include erts"},
          {override,97,"override",string,
              "Provide an app name and a directory to override in the form <appname>:<app directory>"},
          {config,99,"config",{string,[]},"The path to a config file"},
          {overlay_vars,undefined,"overlay_vars",string,
              "Path to a file of overlay variables"},
          {vm_args,undefined,"vm_args",string,
              "Path to a file to use for vm.args"},
          {sys_config,undefined,"sys_config",string,
              "Path to a file to use for sys.config"},
          {system_libs,undefined,"system_libs",string,
              "Path to dir of Erlang system libs"},
          {version,undefined,"version",undefined,"Print relx version"},
          {root_dir,114,"root",string,"The project root directory"}],
         [default],
         default},
     {provider,upgrade,rebar_prv_plugins_upgrade,
         {[],[]},
         true,[],"List or upgrade plugins","Upgrade plugins",
         "rebar3 plugins upgrade <plugin>",
         [{plugin,undefined,undefined,string,"Plugin to upgrade"}],
         [default],
         plugins},
     {provider,list,rebar_prv_plugins,
         {[],[]},
         true,[],"List local and global plugins for this project",
         "List local and global plugins for this project",
         "rebar3 plugins list",[],
         [default],
         plugins},
     {provider,path,rebar_prv_path,
         {[],[]},
         true,
         [app_discovery],
         "Print paths to build dirs in current profile.",
         "Print paths to build dirs in current profile.","rebar3 path",
         [{app,undefined,"app",string,
              "Comma separated list of applications to return paths for."},
          {base,undefined,"base",boolean,
              "Return the `base' path of the current profile."},
          {bin,undefined,"bin",boolean,
              "Return the `bin' path of the current profile."},
          {ebin,undefined,"ebin",boolean,
              "Return all `ebin' paths of the current profile's applications."},
          {lib,undefined,"lib",boolean,
              "Return the `lib' path of the current profile."},
          {priv,undefined,"priv",boolean,
              "Return the `priv' path of the current profile's applications."},
          {separator,115,"separator",string,
              "In case of multiple return paths, the separator character to use to join them."},
          {src,undefined,"src",boolean,
              "Return the `src' path of the current profile's applications."},
          {rel,undefined,"rel",boolean,
              "Return the `rel' path of the current profile."}],
         [default],
         default},
     {provider,pkgs,rebar_prv_packages,
         {[],[]},
         true,[],
         ["List information for a package",46,"\n"],
         "List information for a package.","rebar3 pkgs elli",
         [{package,undefined,undefined,string,
              "Package to fetch information for."}],
         [default],
         default},
     {provider,new,rebar_prv_new,
         {[],[]},
         true,[],
         [67,114,101,97,116,101,32,114,101,98,97,114,51,32,112,114,111,106,
          101,99,116,32,98,97,115,101,100,32,111,110,32,116,101,109,112,108,
          97,116,101,32,97,110,100,32,118,97,114,115,46,"\n","\n",86,97,108,
          105,100,32,99,111,109,109,97,110,100,32,108,105,110,101,32,111,112,
          116,105,111,110,115,58,"\n",32,32,60,116,101,109,112,108,97,116,101,
          62,32,91,118,97,114,61,102,111,111,44,46,46,46,93,"\n","\n",83,101,
          101,32,97,118,97,105,108,97,98,108,101,32,116,101,109,112,108,97,
          116,101,115,32,119,105,116,104,58,32,96,114,101,98,97,114,51,32,110,
          101,119,32,104,101,108,112,96,"\n"],
         "Create new project from templates.","rebar3 new <template>",
         [{force,102,"force",undefined,"overwrite existing files"}],
         [default],
         default},
     {provider,lock,rebar_prv_lock,
         {[],[]},
         false,
         [install_deps],
         "Locks dependencies","Locks dependencies.",[],[],
         [default],
         default},
     {provider,upgrade,rebar_prv_local_upgrade,
         {[],[]},
         true,[],[],"Download latest rebar3 escript and extract.",
         "rebar3 unstable upgrade",[],
         [default],
         local},
     {provider,install,rebar_prv_local_install,
         {[],[]},
         true,[],[],
         "Extract libs from rebar3 escript along with a run script.",
         "rebar3 unstable install",[],
         [default],
         local},
     {provider,install_deps,rebar_prv_install_deps,
         {[],[]},
         false,
         [app_discovery],
         [],[],undefined,[],
         [default],
         default},
     {provider,help,rebar_prv_help,
         {[],[]},
         true,[],
         "Display a list of tasks or help for a given task or subtask.",
         "Display a list of tasks or help for a given task or subtask.",
         "rebar3 help <task>",
         [{help_task,undefined,undefined,string,"Task to print help for."}],
         [default],
         default},
     {provider,'get-deps',rebar_prv_get_deps,
         {[],[]},
         true,
         [lock],
         "Fetch project dependencies.","Fetch dependencies.",
         "rebar3 get-deps",[],[],default},
     {provider,eunit,rebar_prv_eunit,
         {[],[]},
         true,
         [lock],
         "Run EUnit Tests.","Run EUnit Tests.","rebar3 eunit",
         [{app,undefined,"app",string,
              "Comma separated list of application test suites to run. Equivalent to `[{application, App}]`."},
          {application,undefined,"application",string,
              "Comma separated list of application test suites to run. Equivalent to `[{application, App}]`."},
          {cover,99,"cover",boolean,"Generate cover data. Defaults to false."},
          {cover_export_name,undefined,"cover_export_name",string,
              "Base name of the coverdata file to write"},
          {dir,100,"dir",string,
              "Comma separated list of dirs to load tests from. Equivalent to `[{dir, Dir}]`."},
          {file,102,"file",string,
              "Comma separated list of files to load tests from. Equivalent to `[{file, File}]`."},
          {module,109,"module",string,
              "Comma separated list of modules to load tests from. Equivalent to `[{module, Module}]`."},
          {suite,115,"suite",string,
              "Comma separated list of modules to load tests from. Equivalent to `[{module, Module}]`."},
          {generator,103,"generator",string,
              "Comma separated list of generators (the format is `module:function`) to load tests from. Equivalent to `[{generator, Module, Function}]`."},
          {verbose,118,"verbose",boolean,"Verbose output. Defaults to false."},
          {name,undefined,"name",atom,"Gives a long name to the node"},
          {sname,undefined,"sname",atom,"Gives a short name to the node"},
          {setcookie,undefined,"setcookie",atom,
              "Sets the cookie if the node is distributed"}],
         [test],
         default},
     {provider,escriptize,rebar_prv_escriptize,
         {[],[]},
         true,
         [compile],
         "Generate an escript executable containing the project's and its dependencies' BEAM files.",
         "Generate escript archive.","rebar3 escriptize",[],
         [default],
         default},
     {provider,edoc,rebar_prv_edoc,
         {[],[]},
         true,
         [compile],
         "Generate documentation using edoc.",
         "Generate documentation using edoc.","rebar3 edoc",[],
         [docs],
         default},
     {provider,do,rebar_prv_do,
         {[],[]},
         true,[],
         "Higher order provider for running multiple tasks in a sequence.",
         "Higher order provider for running multiple tasks in a sequence.",
         "rebar3 do <task1>, <task2>, ...",[],
         [default],
         default},
     {provider,dialyzer,rebar_prv_dialyzer,
         {[],[]},
         true,
         [compile],
         "Run the Dialyzer analyzer on the project.\n\nThis command will build, and keep up-to-date, a suitable PLT and will use it to carry out success typing analysis on the current project.\n\nThe following (optional) configurations can be added to a `proplist` of options `dialyzer` in rebar.config:\n`warnings` - a list of dialyzer warnings\n`get_warnings` - display warnings when altering a PLT file (boolean)\n`plt_apps` - the strategy for determining the applications which included in the PLT file, `top_level_deps` to include just the direct dependencies or `all_deps` to include all nested dependencies*\n`plt_extra_apps` - a list of extra applications to include in the PLT file\n`plt_extra_mods` - a list of extra modules to includes in the PLT file\n`plt_location` - the location of the PLT file, `local` to store in the profile's base directory (default) or a custom directory.\n`plt_prefix` - the prefix to the PLT file, defaults to \"rebar3\"**\n`base_plt_apps` - a list of applications to include in the base PLT file***\n`base_plt_mods` - a list of modules to include in the base PLT file***\n`base_plt_location` - the location of base PLT file, `global` to store in $HOME/.cache/rebar3 (default) or  a custom directory***\n`base_plt_prefix` - the prefix to the base PLT file, defaults to \"rebar3\"** ***\n`exclude_apps` - a list of applications to exclude from PLT files and success typing analysis, `plt_extra_mods` and `base_plt_mods` can add modules from excluded applications\n`exclude_mods` - a list of modules to exclude from PLT files and success typing analysis\n\nFor example, to warn on unmatched returns: \n{dialyzer, [{warnings, [unmatched_returns]}]}.\n\n*The direct dependent applications are listed in `applications` and `included_applications` of their .app files.\n**PLT files are named \"<prefix>_<otp_release>_plt\".\n***The base PLT is a PLT containing the core applications often required for a project's PLT. One base PLT is created per OTP version and stored in `base_plt_location`. A base PLT is used to build project PLTs.\n",
         "Run the Dialyzer analyzer on the project.","rebar3 dialyzer",
         [{update_plt,117,"update-plt",boolean,
              "Enable updating the PLT. Default: true"},
          {succ_typings,115,"succ-typings",boolean,
              "Enable success typing analysis. Default: true"}],
         [default],
         default},
     {provider,tree,rebar_prv_deps_tree,
         {[],[]},
         true,
         [lock],
         [],"Print dependency tree.","rebar3 tree",
         [{verbose,118,"verbose",undefined,
              "Print repo and branch/tag/ref for git and hg deps"}],
         [default],
         default},
     {provider,deps,rebar_prv_deps,
         {[],[]},
         true,
         [app_discovery],
         "List dependencies. Those not matching lock files are followed by an asterisk (*).",
         "List dependencies","rebar3 deps",[],
         [default],
         default},
     {provider,cover,rebar_prv_cover,
         {[],[]},
         true,
         [lock],
         "Perform coverage analysis.","Perform coverage analysis.",
         "rebar3 cover",
         [{reset,114,"reset",boolean,"Reset all coverdata."},
          {verbose,118,"verbose",boolean,"Print coverage analysis."},
          {min_coverage,109,"min_coverage",integer,
              "Mandate a coverage percentage required to succeed (0..100)"}],
         [test],
         default},
     {provider,compile,rebar_prv_compile,
         {[],[]},
         true,
         [lock],
         "Compile apps .app.src and .erl files.",
         "Compile apps .app.src and .erl files.","rebar3 compile",
         [{deps_only,100,"deps_only",undefined,
              "Only compile dependencies, no project apps will be built."}],
         [default],
         default},
     {provider,ct,rebar_prv_common_test,
         {[],[]},
         true,
         [lock],
         "Run Common Tests.","Run Common Tests.","rebar3 ct",
         [{dir,undefined,"dir",string,
              "List of additional directories containing test suites"},
          {suite,undefined,"suite",string,"List of test suites to run"},
          {group,undefined,"group",string,"List of test groups to run"},
          {testcase,undefined,"case",string,"List of test cases to run"},
          {label,undefined,"label",string,"Test label"},
          {config,undefined,"config",string,"List of config files"},
          {spec,undefined,"spec",string,"List of test specifications"},
          {join_specs,undefined,"join_specs",boolean,
              "Merge all test specifications and perform a single test run"},
          {allow_user_terms,undefined,"allow_user_terms",boolean,
              "Allow user defined config values in config files"},
          {logdir,undefined,"logdir",string,"Log folder"},
          {logopts,undefined,"logopts",string,
              "Options for common test logging"},
          {verbosity,undefined,"verbosity",integer,"Verbosity"},
          {cover,99,"cover",{boolean,false},"Generate cover data"},
          {cover_export_name,undefined,"cover_export_name",string,
              "Base name of the coverdata file to write"},
          {repeat,undefined,"repeat",integer,"How often to repeat tests"},
          {duration,undefined,"duration",string,
              "Max runtime (format: HHMMSS)"},
          {until,undefined,"until",string,"Run until (format: HHMMSS)"},
          {force_stop,undefined,"force_stop",string,
              "Force stop on test timeout (true | false | skip_rest)"},
          {basic_html,undefined,"basic_html",boolean,"Show basic HTML"},
          {stylesheet,undefined,"stylesheet",string,
              "CSS stylesheet to apply to html output"},
          {decrypt_key,undefined,"decrypt_key",string,
              "Path to key for decrypting config"},
          {decrypt_file,undefined,"decrypt_file",string,
              "Path to file containing key for decrypting config"},
          {abort_if_missing_suites,undefined,"abort_if_missing_suites",
              {boolean,true},
              "Abort if suites are missing"},
          {multiply_timetraps,undefined,"multiply_timetraps",integer,[]},
          {scale_timetraps,undefined,"scale_timetraps",boolean,
              "Scale timetraps"},
          {create_priv_dir,undefined,"create_priv_dir",string,
              "Create priv dir (auto_per_run | auto_per_tc | manual_per_tc)"},
          {include,undefined,"include",string,
              "Directories containing additional include files"},
          {readable,undefined,"readable",string,
              "Shows test case names and only displays logs to shell on failures (true | compact | false)"},
          {verbose,118,"verbose",boolean,"Verbose output"},
          {name,undefined,"name",atom,"Gives a long name to the node"},
          {sname,undefined,"sname",atom,"Gives a short name to the node"},
          {setcookie,undefined,"setcookie",atom,
              "Sets the cookie if the node is distributed"},
          {sys_config,undefined,"sys_config",string,
              "List of application config files"},
          {compile_only,undefined,"compile_only",boolean,
              "Compile modules in the project with the test configuration but do not run the tests"},
          {retry,undefined,"retry",boolean,
              "Experimental feature. If any specification for previously failing test is found, runs them."},
          {fail_fast,undefined,"fail_fast",
              {boolean,false},
              "Experimental feature. If any test fails, the run is aborted. Since common test does not support this natively, we abort the rebar3 run on a failure. This May break CT's disk logging and other rebar3 features."}],
         [test],
         default},
     {provider,clean,rebar_prv_clean,
         {[],[]},
         true,
         [app_discovery,install_deps],
         "Remove compiled beam files from apps.",
         "Remove compiled beam files from apps.","rebar3 clean",
         [{all,97,"all",undefined,"Clean all apps include deps"},
          {profile,112,"profile",string,
              "Clean under profile. Equivalent to `rebar3 as <profile> clean`"}],
         [default],
         default},
     {provider,compile,rebar_prv_bare_compile,
         {[],[]},
         false,
         [{default,app_discovery}],
         [],[],[],
         [{paths,112,"paths",string,
              "Wildcard paths of ebin directories to add to code path, separated by a colon"},
          {separator,115,"separator",string,
              "In case of multiple return paths, the separator character to use to join them."}],
         [default],
         bare},
     {provider,as,rebar_prv_as,
         {[],[]},
         true,[],
         "Higher order provider for running multiple tasks in a sequence as a certain profiles.",
         "Higher order provider for running multiple tasks in a sequence as a certain profiles.",
         "rebar3 as <profile1>,<profile2>,... <task1>, <task2>, ...",
         [{profile,undefined,undefined,string,"Profiles to run as."}],
         [default],
         default},
     {provider,app_discovery,rebar_prv_app_discovery,
         {[],[]},
         false,[],[],[],[],[],
         [default],
         default}],
    false}